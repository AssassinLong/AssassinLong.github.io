<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
        <title>程序化&amp;人生</title>
        <description>程序化&amp;人生 - assassinlong</description>
        <link></link>
        <atom:link href="" rel="self" type="application/rss+xml" />
        <lastBuildDate>Tue, 29 Nov 2016 12:01:12 +0800</lastBuildDate>
        <pubDate>Tue, 29 Nov 2016 12:01:12 +0800</pubDate>
        <ttl>60</ttl>


        <item>
                <title>微信之APP支付</title>
                <description>&lt;p&gt;用户在微信公众平台(申请扫码支付、公众号支付)或开放平台(申请APP支付)按照相应提示，申请相应微信支付模式。微信支付工作人
员审核资料无误后开通相应的微信支付权限。微信支付申请审核通过后，商户在申请资料填写的邮箱中收取到由微信支付小助手发送的
邮件，此邮件包含开发时需要使用的支付账户信息。&lt;/p&gt;
&lt;p&gt;邮件中的账户参数与接口API参数对应关系见下表格&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
    &lt;th&gt;邮件中参数&lt;/th&gt;
    &lt;th&gt;API参数名&lt;/th&gt;
    &lt;th&gt;详细说明&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;APPID&lt;/td&gt;
    &lt;td&gt;appid&lt;/td&gt;
    &lt;td&gt;appid是微信公众账号或开放平台APP的唯一标识，在公众平台申请公众账号或者在开放平台申请APP账号后，微信会自动分配对
        应的appid，用于标识该应用。可在微信公众平台--&amp;gt;开发者中心查看，商户的微信支付审核通过邮件中也会包含该字段值。
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;微信支付商户号&lt;/td&gt;
    &lt;td&gt;mch_id&lt;/td&gt;
    &lt;td&gt; 商户申请微信支付后，由微信支付分配的商户收款账号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;API密钥&lt;/td&gt;
    &lt;td&gt;key&lt;/td&gt;
    &lt;td&gt;交易过程生成签名的密钥，仅保留在商户系统和微信支付后台，不会在网络中传播。商户妥善保管该Key，切勿在网络中传输，
        不能在其他客户端中存储，保证key不会被泄漏。商户可根据邮件提示登录微信商户平台进行设置。也可按一下路径设置：微信
        商户平台(pay.weixin.qq.com)--&amp;gt;账户设置--&amp;gt;API安全--&amp;gt;密钥设置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Appsecret&lt;/td&gt;
    &lt;td&gt;secret&lt;/td&gt;
    &lt;td&gt; AppSecret是APPID对应的接口密码，用于获取接口调用凭证access_token时使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;商户接入微信支付，调用API必须遵循以下规则:&lt;/p&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;传输方式&lt;/td&gt;
        &lt;td&gt;为保证交易安全性，采用HTTPS传输&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;提交方式&lt;/td&gt;
        &lt;td&gt;采用POST方法提交&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;数据格式&lt;/td&gt;
        &lt;td&gt;提交和返回数据都为XML格式，根节点名为xml&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;字符编码&lt;/td&gt;
        &lt;td&gt;统一采用UTF-8字符编码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;签名算法&lt;/td&gt;
        &lt;td&gt;MD5，后续会兼容SHA1、SHA256、HMAC等。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;签名要求&lt;/td&gt;
        &lt;td&gt;请求和接收数据均需要校验签名，详细方法请参考安全规范-签名算法&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;证书要求&lt;/td&gt;
        &lt;td&gt;调用申请退款、撤销订单接口需要商户证书&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;判断逻辑&lt;/td&gt;
        &lt;td&gt;先判断协议字段返回，再判断业务返回，最后判断交易状态&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;p class=&quot; mb10&quot;&gt;以下是交互时序图，统一下单API、支付结果通知API和查询订单API等都涉及签名过程，调用都必须在商户服务器端完成。如图8.6所示。&lt;/p&gt;
&lt;p class=&quot;tc mb10&quot;&gt;
    &lt;img src=&quot;https://pay.weixin.qq.com/wiki/doc/api/img/chapter8_3_1.png&quot; alt=&quot;APP支付时序图&quot; /&gt;&lt;/p&gt;
&lt;center class=&quot;mb20&quot;&gt;图8.6 APP支付时序图&lt;/center&gt;
&lt;p&gt;商户系统和微信支付系统主要交互说明：&lt;/p&gt;
&lt;p&gt;步骤1：用户在商户APP中选择商品，提交订单，选择微信支付。&lt;/p&gt;
&lt;p&gt;步骤2：商户后台收到用户支付单，调用微信支付统一下单接口。参见【&lt;a target=&quot;_blank&quot; href=&quot;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_1&quot;&gt;统一下单API&lt;/a&gt;】。&lt;/p&gt;
&lt;p&gt;
    步骤3：统一下单接口返回正常的prepay_id，再按签名规范重新生成签名后，将数据传输给APP。参与签名的字段名为appId，partnerId，prepayId，nonceStr，timeStamp，package。注意：package的值格式为Sign=WXPay
&lt;/p&gt;
&lt;p&gt;步骤4：商户APP调起微信支付。api参见本章节【&lt;a target=&quot;_blank&quot; href=&quot;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5&quot;&gt;app端开发步骤说明&lt;/a&gt;】&lt;/p&gt;
&lt;p&gt;步骤5：商户后台接收支付通知。api参见【&lt;a target=&quot;_blank&quot; href=&quot;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_7&quot;&gt;支付结果通知API&lt;/a&gt;】&lt;/p&gt;
&lt;p&gt;步骤6：商户后台查询支付结果。，api参见【&lt;a target=&quot;_blank&quot; href=&quot;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_2&quot;&gt;查询订单API&lt;/a&gt;】&lt;/p&gt;
&lt;h1 id=&quot;具体步骤&quot;&gt;具体步骤&lt;/h1&gt;

&lt;h2 id=&quot;1导入sdk文件&quot;&gt;1.导入SDK文件&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114172939553-995809901.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2导入相关的系统库及文件不导入会报错&quot;&gt;2.导入相关的系统库及文件。不导入会报错。&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;1.SystemConfiguration.framework
    2.libz.tbd
    3.libsqlite3.0.tbd
    4.CoreTelephony.framework
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;3配置infoplist&quot;&gt;3.配置info.plist&lt;/h2&gt;

&lt;h3 id=&quot;a-schemes-注意item0-这里要修改成商户自己的appid&quot;&gt;a. schemes ，注意，item0 这里要修改成商户自己的APPID&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114173300350-150848608.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;或者这样修改：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114173752257-1389211762.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;b白名单&quot;&gt;b.白名单&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114173333382-2057079315.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;c-安全配置支持http&quot;&gt;c. 安全配置支持Http&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114173401350-1230731678.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然这部分的配置，也可以通过修改XML来实现。 &lt;br /&gt;
    &lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114173527319-893757257.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4修改bitcode&quot;&gt;4.修改bitcode。&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160120135711578-309257643.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;修改：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160120135805437-1293881831.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5在appdelegate-注册微信&quot;&gt;5.在AppDelegate 注册微信&lt;/h2&gt;

&lt;p&gt;导入#import “WXApiManager.h”&lt;/p&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs objectivec has-numbering&quot;&gt;- (&lt;span class=&quot;hljs-built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;hljs-built_in&quot;&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSDictionary&lt;/span&gt; *)launchOptions {
    &lt;span class=&quot;hljs-comment&quot;&gt;//向微信注册wxd930ea5d5a258f4f&lt;/span&gt;
    [WXApi registerApp:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;wxb4ba3c02aa476ea1&quot;&lt;/span&gt; withDescription:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;demo 2.0&quot;&lt;/span&gt;];

    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;YES&lt;/span&gt;;
    }

    - (&lt;span class=&quot;hljs-built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;hljs-built_in&quot;&gt;UIApplication&lt;/span&gt; *)application handleOpenURL:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSURL&lt;/span&gt; *)url {
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  [WXApi handleOpenURL:url delegate:[WXApiManager sharedManager]];
    }

    - (&lt;span class=&quot;hljs-built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;hljs-built_in&quot;&gt;UIApplication&lt;/span&gt; *)application openURL:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSURL&lt;/span&gt; *)url sourceApplication:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; *)sourceApplication annotation:(&lt;span class=&quot;hljs-keyword&quot;&gt;id&lt;/span&gt;)annotation {
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [WXApi handleOpenURL:url delegate:[WXApiManager sharedManager]];
    }&lt;/code&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;h3 id=&quot;6接下来就是发起请求支付了实现上核心代码只有几行&quot;&gt;6.接下来，就是发起请求支付了，实现上核心代码只有几行。&lt;/h3&gt;

&lt;p&gt;这部分代码在demo的WXApiRequestHandler–》jumpToBizPay 里。&lt;/p&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs avrasm has-numbering&quot;&gt;
    //调起微信支付
    PayReq* req             = [[[PayReq alloc] init]autorelease]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    req&lt;span class=&quot;hljs-preprocessor&quot;&gt;.partnerId&lt;/span&gt;           = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;partnerid&quot;&lt;/span&gt;]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    req&lt;span class=&quot;hljs-preprocessor&quot;&gt;.prepayId&lt;/span&gt;            = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;prepayid&quot;&lt;/span&gt;]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    req&lt;span class=&quot;hljs-preprocessor&quot;&gt;.nonceStr&lt;/span&gt;            = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;noncestr&quot;&lt;/span&gt;]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    req&lt;span class=&quot;hljs-preprocessor&quot;&gt;.timeStamp&lt;/span&gt;           = stamp&lt;span class=&quot;hljs-preprocessor&quot;&gt;.intValue&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    req&lt;span class=&quot;hljs-preprocessor&quot;&gt;.package&lt;/span&gt;             = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;package&quot;&lt;/span&gt;]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    req&lt;span class=&quot;hljs-preprocessor&quot;&gt;.sign&lt;/span&gt;                = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;sign&quot;&lt;/span&gt;]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;
    [WXApi sendReq:req]&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;h2 id=&quot;7不管支付成功还是失败结果会返回到wxapimanageronresp-方法下&quot;&gt;7.不管支付成功还是失败，结果会返回到WXApiManager–》onResp 方法下&lt;/h2&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs objectivec has-numbering&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;) {
    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; WXSuccess:
    strMsg = @&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付结果：成功！&quot;&lt;/span&gt;;
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSLog&lt;/span&gt;(@&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付成功－PaySuccess，retcode = %d&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;);
    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;

    &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:
    strMsg = [&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付结果：失败！retcode = %d, retstr = %@&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;,resp&lt;span class=&quot;hljs-variable&quot;&gt;.errStr&lt;/span&gt;];
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSLog&lt;/span&gt;(@&lt;span class=&quot;hljs-string&quot;&gt;&quot;错误，retcode = %d, retstr = %@&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;,resp&lt;span class=&quot;hljs-variable&quot;&gt;.errStr&lt;/span&gt;);
    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;
    }&lt;/code&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;h1 id=&quot;客户端进行签名&quot;&gt;客户端进行签名&lt;/h1&gt;

&lt;h2 id=&quot;1导入文件官方已经不提供这个sdk的下载了我已经打包到源代码了2015年3月11号最新修改的版本&quot;&gt;1.导入文件。官方已经不提供这个SDK的下载了，我已经打包到源代码了，2015年3月11号最新修改的版本&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114183115100-851859195.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2里面有两个文件是非arc的我们需要设置一下-fno-objc-arc&quot;&gt;2.里面有两个文件是非arc的，我们需要设置一下 -fno-objc-arc&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/292326/201601/292326-20160114183205210-1022682077.png&quot; alt=&quot;这里写图片描述&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3导入系统库及infolist配置请参数上面服务端签名&quot;&gt;3.导入系统库及info.list配置，请参数上面服务端签名。&lt;/h2&gt;

&lt;h2 id=&quot;4appdelegate配置&quot;&gt;4.AppDelegate配置&lt;/h2&gt;

&lt;h3 id=&quot;1导入头文件&quot;&gt;1）导入头文件&lt;/h3&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs ruleslanguage has-numbering&quot;&gt;&lt;span class=&quot;hljs-array&quot;&gt;#import &lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;WXApi.h&quot;&lt;/span&gt;
    &lt;span class=&quot;hljs-array&quot;&gt;#import &lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;payRequsestHandler.h&quot;&lt;/span&gt;&lt;/code&gt;&lt;ul class=&quot;pre-numbering&quot; style=&quot;&quot;&gt;&lt;li&gt;1&lt;/li&gt;&lt;li&gt;2&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;h3 id=&quot;2实现微信代理&quot;&gt;2）实现微信代理&lt;/h3&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs objectivec has-numbering&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppDelegate&lt;/span&gt; ()&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;WXApiDelegate&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;hljs-keyword&quot;&gt;@end&lt;/span&gt;&lt;/code&gt;&lt;ul class=&quot;pre-numbering&quot; style=&quot;&quot;&gt;&lt;li&gt;1&lt;/li&gt;&lt;li&gt;2&lt;/li&gt;&lt;li&gt;3&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;h3 id=&quot;3注册微信及微信支付回调&quot;&gt;3）注册微信，及微信支付回调&lt;/h3&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs objectivec has-numbering&quot;&gt;- (&lt;span class=&quot;hljs-built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;hljs-built_in&quot;&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSDictionary&lt;/span&gt; *)launchOptions {
    &lt;span class=&quot;hljs-comment&quot;&gt;// Override point for customization after application launch.&lt;/span&gt;
    &lt;span class=&quot;hljs-comment&quot;&gt;//向微信注册&lt;/span&gt;
    [WXApi registerApp:APP_ID withDescription:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;demo 2.0&quot;&lt;/span&gt;];

    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;YES&lt;/span&gt;;
    }

    - (&lt;span class=&quot;hljs-built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;hljs-built_in&quot;&gt;UIApplication&lt;/span&gt; *)application handleOpenURL:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSURL&lt;/span&gt; *)url
    {
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  [WXApi handleOpenURL:url delegate:&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;];
    }

    - (&lt;span class=&quot;hljs-built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;hljs-built_in&quot;&gt;UIApplication&lt;/span&gt; *)application openURL:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSURL&lt;/span&gt; *)url sourceApplication:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; *)sourceApplication annotation:(&lt;span class=&quot;hljs-keyword&quot;&gt;id&lt;/span&gt;)annotation
    {
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  [WXApi handleOpenURL:url delegate:&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;];
    }

    &lt;span class=&quot;hljs-comment&quot;&gt;// 微信支付成功或者失败回调&lt;/span&gt;
    -(&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;) onResp:(BaseResp*)resp
    {
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; *strMsg = [&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;errcode:%d&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;];
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; *strTitle;

    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;([resp isKindOfClass:[SendMessageToWXResp class]])
    {
    strTitle = [&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;发送媒体消息结果&quot;&lt;/span&gt;];
    }
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;([resp isKindOfClass:[PayResp class]]){
    &lt;span class=&quot;hljs-comment&quot;&gt;//支付返回结果，实际支付结果需要去微信服务器端查询&lt;/span&gt;
    strTitle = [&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付结果&quot;&lt;/span&gt;];

    &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;) {
    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; WXSuccess:
    strMsg = @&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付结果：成功！&quot;&lt;/span&gt;;
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSLog&lt;/span&gt;(@&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付成功－PaySuccess，retcode = %d&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;);
    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;

    &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:
    strMsg = [&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;支付结果：失败！retcode = %d, retstr = %@&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;,resp&lt;span class=&quot;hljs-variable&quot;&gt;.errStr&lt;/span&gt;];
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSLog&lt;/span&gt;(@&lt;span class=&quot;hljs-string&quot;&gt;&quot;错误，retcode = %d, retstr = %@&quot;&lt;/span&gt;, resp&lt;span class=&quot;hljs-variable&quot;&gt;.errCode&lt;/span&gt;,resp&lt;span class=&quot;hljs-variable&quot;&gt;.errStr&lt;/span&gt;);
    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;
    }
    }
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:strTitle message:strMsg delegate:&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt; cancelButtonTitle:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;OK&quot;&lt;/span&gt; otherButtonTitles:&lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt;];
    [alert show];
    }&lt;/code&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;h2 id=&quot;5写方法直接在支付时调用&quot;&gt;5.写方法直接在支付时调用&lt;/h2&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;hljs objectivec has-numbering&quot;&gt;- (&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;)payForWechat
    {
    &lt;span class=&quot;hljs-comment&quot;&gt;//创建支付签名对象&lt;/span&gt;
    payRequsestHandler *req = [[payRequsestHandler alloc] init];
    &lt;span class=&quot;hljs-comment&quot;&gt;//初始化支付签名对象&lt;/span&gt;
    [req init:APP_ID mch_id:MCH_ID];
    &lt;span class=&quot;hljs-comment&quot;&gt;//设置密钥&lt;/span&gt;
    [req setKey:PARTNER_ID];

    &lt;span class=&quot;hljs-built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *dict = [req sendPay_demo];

    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(dict != &lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt;){
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSMutableString&lt;/span&gt; *retcode = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;retcode&quot;&lt;/span&gt;];
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (retcode&lt;span class=&quot;hljs-variable&quot;&gt;.intValue&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSMutableString&lt;/span&gt; *stamp  = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;];

    &lt;span class=&quot;hljs-comment&quot;&gt;//调起微信支付&lt;/span&gt;
    PayReq* req             = [[PayReq alloc] init];
    req&lt;span class=&quot;hljs-variable&quot;&gt;.openID&lt;/span&gt;              = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;appid&quot;&lt;/span&gt;];
    req&lt;span class=&quot;hljs-variable&quot;&gt;.partnerId&lt;/span&gt;           = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;partnerid&quot;&lt;/span&gt;];
    req&lt;span class=&quot;hljs-variable&quot;&gt;.prepayId&lt;/span&gt;            = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;prepayid&quot;&lt;/span&gt;];
    req&lt;span class=&quot;hljs-variable&quot;&gt;.nonceStr&lt;/span&gt;            = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;noncestr&quot;&lt;/span&gt;];
    req&lt;span class=&quot;hljs-variable&quot;&gt;.timeStamp&lt;/span&gt;           = stamp&lt;span class=&quot;hljs-variable&quot;&gt;.intValue&lt;/span&gt;;
    req&lt;span class=&quot;hljs-variable&quot;&gt;.package&lt;/span&gt;             = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;package&quot;&lt;/span&gt;];
    req&lt;span class=&quot;hljs-variable&quot;&gt;.sign&lt;/span&gt;                = [dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;sign&quot;&lt;/span&gt;];
    [WXApi sendReq:req];
    &lt;span class=&quot;hljs-comment&quot;&gt;//日志输出&lt;/span&gt;
    &lt;span class=&quot;hljs-built_in&quot;&gt;NSLog&lt;/span&gt;(@&lt;span class=&quot;hljs-string&quot;&gt;&quot;appid=%@\npartid=%@\nprepayid=%@\nnoncestr=%@\ntimestamp=%ld\npackage=%@\nsign=%@&quot;&lt;/span&gt;,req&lt;span class=&quot;hljs-variable&quot;&gt;.openID&lt;/span&gt;,req&lt;span class=&quot;hljs-variable&quot;&gt;.partnerId&lt;/span&gt;,req&lt;span class=&quot;hljs-variable&quot;&gt;.prepayId&lt;/span&gt;,req&lt;span class=&quot;hljs-variable&quot;&gt;.nonceStr&lt;/span&gt;,(&lt;span class=&quot;hljs-keyword&quot;&gt;long&lt;/span&gt;)req&lt;span class=&quot;hljs-variable&quot;&gt;.timeStamp&lt;/span&gt;,req&lt;span class=&quot;hljs-variable&quot;&gt;.package&lt;/span&gt;,req&lt;span class=&quot;hljs-variable&quot;&gt;.sign&lt;/span&gt; );
    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{
    [&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt; alert:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;提示信息&quot;&lt;/span&gt; msg:[dict objectForKey:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;retmsg&quot;&lt;/span&gt;]];
    }
    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{
    [&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt; alert:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;提示信息&quot;&lt;/span&gt; msg:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;服务器返回错误，未获取到json对象&quot;&lt;/span&gt;];
    }
    }

    &lt;span class=&quot;hljs-comment&quot;&gt;//客户端提示信息&lt;/span&gt;
    - (&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;)alert:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; *)title msg:(&lt;span class=&quot;hljs-built_in&quot;&gt;NSString&lt;/span&gt; *)msg
    {
    UIAlertView *alter = [[UIAlertView alloc] initWithTitle:title message:msg delegate:&lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt; cancelButtonTitle:@&lt;span class=&quot;hljs-string&quot;&gt;&quot;OK&quot;&lt;/span&gt; otherButtonTitles:&lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt;];

    [alter show];
    }&lt;/code&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/pre&gt;

&lt;p&gt;最后，修改payRequsestHandler.h文件里的APP_ID 和MCH_ID即可使用。 &lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;br /&gt;
    &lt;/p&gt;

</description>
                <link>/%E5%BE%AE%E4%BF%A1/2016/11/04/%E5%BE%AE%E4%BF%A1APP%E6%94%AF%E4%BB%98</link>
                <guid>/%E5%BE%AE%E4%BF%A1/2016/11/04/微信APP支付</guid>
                <pubDate>Fri, 04 Nov 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>github+jekyll搭建博客</title>
                <description>&lt;p&gt;喜欢写博客的人，会经历三个阶段：&lt;/p&gt;
&lt;p&gt;大多数人都停留在第一和第二个阶段，但是现在越来越多的人，主要是程序员喜欢在Github上写博客，一切都任由你左右，一个commit就能提交一篇文章，还有着无限流量免费的空间，想想就惬意不止。&lt;/p&gt;
&lt;p&gt;第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。
   第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。
   第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。&lt;/p&gt;
&lt;p&gt;进入正题，如何利用Github和Jekyll搭建一个博客：&lt;/p&gt;
&lt;h3&gt;介绍&lt;/h3&gt;

&lt;p&gt;　Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown （或者 Textile） 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的&lt;/p&gt;

&lt;p&gt;　使用 Jekyll 搭建博客之前要确认下本机环境，Git 环境（用于部署到远端）、&lt;a href=&quot;http://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; 环境（Jekyll 是基于 Ruby 开发的）、包管理器 &lt;a href=&quot;http://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;              &lt;br /&gt;
　　如果你是 Mac 用户，你就需要安装 Xcode 和 Command-Line Tools了。下载方式 Preferences → Downloads → Components。&lt;/p&gt;

&lt;p&gt;　　Jekyll 是一个免费的简单静态网页生成工具，可以配合第三方服务例如： Disqus（评论）、多说(评论) 以及分享 等等扩展功能，Jekyll 可以直接部署在 Github（国外） 或 Coding（国内） 上，可以绑定自己的域名。&lt;a href=&quot;http://jekyll.bootcss.com/&quot;&gt;Jekyll中文文档&lt;/a&gt;、&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll英文文档&lt;/a&gt;、&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll主题列表&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;jekyll-&quot;&gt;Jekyll 环境配置&lt;/h3&gt;

&lt;p&gt;安装 jekyll&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;创建博客&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll new myBlog
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;进入博客目录&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ cd myBlog
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;启动本地服务&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll serve
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在浏览器里输入： &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;，就可以看到你的博客效果了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jekyll/image1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so easy !&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;目录结构&lt;/h3&gt;
&lt;p&gt;　
　Jekyll 的核心其实是一个文本转换引擎。它的概念其实就是： 你用你最喜欢的标记语言来写文章，可以是 Markdown，也可以是 Textile,或者就是简单的 HTML, 然后 Jekyll 就会帮你套入一个或一系列的布局中。在整个过程中你可以设置URL路径, 你的文本在布局中的显示样式等等。这些都可以通过纯文本编辑来实现，最终生成的静态页面就是你的成品了。&lt;/p&gt;

&lt;p&gt;一个基本的 Jekyll 网站的目录结构一般是像这样的：&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
├── _config.yml
├── _includes
|   ├── footer.html
|   └── header.html
├── _layouts
|   ├── default.html
|   ├── post.html
|   └── page.html
├── _posts
|   └── 2016-10-08-welcome-to-jekyll.markdown
├── _sass
|   ├── _base.scss
|   ├── _layout.scss
|   └── _syntax-highlighting.scss
├── about.md
├── css
|   └── main.scss
├── feed.xml
└── index.html
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这些目录结构以及具体的作用可以参考 &lt;a href=&quot;http://jekyll.com.cn/docs/structure/&quot;&gt;官网文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;进入 _config.yml 里面，修改成你想看到的信息，重新 jekyll server ，刷新浏览器就可以看到你刚刚修改的信息了。&lt;/p&gt;

&lt;p&gt;到此，博客初步搭建算是完成了，&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;博客部署到远端&lt;/h3&gt;

&lt;p&gt;　我这里讲的是部署到 Github Page 创建一个 github 账号，然后创建一个跟你账户名一样的仓库，如我的 github 账户名叫 &lt;a href=&quot;https://github.com/leezhiy&quot;&gt;leezhiy&lt;/a&gt;，我的 github 仓库名就叫 &lt;a href=&quot;https://github.com/leezhiy/leezhiy.github.io&quot;&gt;leezhiy.github.io&lt;/a&gt;，创建好了之后，把刚才建立的 myBlog 项目 push 到 username.github.io仓库里去（username指的是你的github用户名），检查你远端仓库已经跟你本地 myBlog 同步了，然后你在浏览器里输入 username.github.io ，就可以访问你的博客了。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;编写文章&lt;/h3&gt;

&lt;p&gt;　　所有的文章都是 _posts 目录下面，文章格式为 mardown 格式，文章文件名可以是 .mardown 或者 .md。&lt;/p&gt;

&lt;p&gt;　　编写一篇新文章很简单，你可以直接从 _posts/ 目录下复制一份出来 &lt;code&gt;2016-10-16-welcome-to-jekyll副本.markdown&lt;/code&gt; ，修改名字为 2016-10-16-article1.markdown ，注意：文章名的格式前面必须为 2016-10-16- ，日期可以修改，但必须为 年-月-日- 格式，后面的 article1 是整个文章的连接 URL，如果文章名为中文，那么文章的连接URL就会变成这样的：http://baixin.io/2015/08/%E6%90%AD%E5/ ， 所以建议文章名最好是英文的或者阿拉伯数字。 双击 2016-10-16-article1.markdown 打开&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;layout: post
title:  “Welcome to Jekyll!”
date:   2015-7-14 10:29:08 +0800
categories: jekyll update
—&lt;/p&gt;

&lt;p&gt;正文…&lt;/p&gt;

&lt;p&gt;&amp;lt;/code&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;title: 显示的文章名， 如：title: 我的第一篇文章                  &lt;br /&gt;
date:  显示的文章发布日期，如：date: 2016-10-16                        &lt;br /&gt;
categories: tag标签的分类，如：categories: 随笔&lt;/p&gt;

&lt;p&gt;注意：文章头部格式必须为上面的，…. 就是文章的正文内容。&lt;/p&gt;

&lt;p&gt;我写文章使用的是 Sublime Text2 编辑器，如果你对 markdown 语法不熟悉的话，可以看看&lt;a href=&quot;https://www.zybuluo.com/&quot;&gt;作业部落的教程&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;使用我的博客模板&lt;/h3&gt;

&lt;p&gt;虽然博客部署完成了，你会发现博客太简单不是你想要的，如果你喜欢我的模板的话，可以使用我的模板。&lt;/p&gt;

&lt;p&gt;首先你要获取的我博客，&lt;a href=&quot;https://AssassinLong.github.io&quot;&gt;Github项目地址&lt;/a&gt;，你可以直接&lt;a href=&quot;https://github.com/AssassinLong/AssassinLong.github.io/archive/master.zip&quot;&gt;点击下载博客&lt;/a&gt;，进去AssassinLong.github.io/ 目录下， 使用命令部署本地服务&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll server
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;如果你本机没配置过任何jekyll的环境，可能会报错&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;
 /Users/xxxxxxxx/.rvm/rubies/ruby-2.2.2/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in
  `require&#39;: cannot load such file -- bundler (LoadError)
from /Users/xxxxxxxx/.rvm/rubies/ruby-2.2.2/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in
`require&#39;
from /Users/xxxxxxxx/.rvm/gems/ruby-2.2.2/gems/jekyll-3.3.0/lib/jekyll/plugin_manager.rb:34:in
`require_from_bundler&#39;
	from /Users/xxxxxxxx/.rvm/gems/ruby-2.2.2/gems/jekyll-3.3.0/exe/jekyll:9:in `&amp;lt;top (required)&amp;gt;&#39;
	from /Users/xxxxxxxx/.rvm/gems/ruby-2.2.2/bin/jekyll:23:in `load&#39;
	from /Users/xxxxxxxx/.rvm/gems/ruby-2.2.2/bin/jekyll:23:in `&amp;lt;main&amp;gt;&#39;
	from /Users/xxxxxxxx/.rvm/gems/ruby-2.2.2/bin/ruby_executable_hooks:15:in `eval&#39;
	from /Users/xxxxxxxx/.rvm/gems/ruby-2.2.2/bin/ruby_executable_hooks:15:in `&amp;lt;main&amp;gt;&#39;

&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;原因： 没有安装 bundler ，执行安装 bundler 命令&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
$ gem install bundler
&lt;/code&gt;  
&lt;/pre&gt;

&lt;p&gt;提示：&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
 Fetching: bundler-1.13.5.gem (100%)
Successfully installed bundler-1.13.5
Parsing documentation for bundler-1.13.5
Installing ri documentation for bundler-1.13.5
Done installing documentation for bundler after 5 seconds
1 gem installed
&lt;/code&gt;  
&lt;/pre&gt;

&lt;p&gt;再次执行 $ jekyll server  ，提示&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
Could not find proper version of jekyll (3.1.1) in any of the sources
Run `bundle install` to install missing gems.
&lt;/code&gt;  
&lt;/pre&gt;

&lt;p&gt;跟着提示运行命令&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ bundle install
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这个时候你可能会发现 bundle install 运行卡主不动了。&lt;/p&gt;

&lt;p&gt;如果很长时间都没任何提示的话，你可以尝试修改 gem 的 source&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
$ gem sources --remove https://rubygems.org/
$ gem sources -a http://gems.ruby-china.org/
$ gem sources -l
*** CURRENT SOURCES ***
http://gems.ruby-china.org/
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;再次执行命令 $ bundle install，发现开始有动静了&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
Fetching gem metadata from http://gems.ruby-china.org/...........
Fetching version metadata from http://gems.ruby-china.org/..
Fetching dependency metadata from http://gems.ruby-china.org/.
。。。
Installing jekyll-watch 1.3.1
Installing jekyll 3.1.1
Bundle complete! 3 Gemfile dependencies, 17 gems now installed.
Use `bundle show [gemname]` to see where a bundled gem is installed.
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;bundler安装完成，后再次启动本地服务&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;继续报错&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
Configuration file: /Users/tendcloud-Caroline/Desktop/leopardpan.github.io/_config.yml
Dependency Error: Yikes! It looks like you don&#39;t have jekyll-sitemap or one of its dependencies installed. In order to use
Jekyll as currently configured, you&#39;ll need to install this gem. The full error message from Ruby is: &#39;cannot load such file
-- jekyll-sitemap&#39; If you run into trouble, you can find helpful resources at http://jekyllrb.com/help/!
jekyll 3.1.1 | Error:  jekyll-sitemap
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;表示 当前的 jekyll 版本是 3.1.1 ，无法使用 jekyll-sitemap&lt;/p&gt;

&lt;p&gt;解决方法有两个&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1、打开当前目录下的 _config.yml 文件，把 gems: [jekyll-paginate,jekyll-sitemap] 换成 gems: [jekyll-paginate] ，也就是去掉jekyll-sitemap。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;2、升级 jekyll 版本，我当前的是 jekyll 3.1.2 。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;修改完成后保存配置，再次执行&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;提示&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
Configuration file: /Users/baixinpan/Desktop/OpenSource/Mine/Page-Blog/leopardpan.github.io-github/_config.yml
            Source: /Users/baixinpan/Desktop/OpenSource/Mine/Page-Blog/leopardpan.github.io-github
       Destination: /Users/baixinpan/Desktop/OpenSource/Mine/Page-Blog/leopardpan.github.io-github/_site
 Incremental build: disabled. Enable with --incremental
      Generating...
                    done in 0.901 seconds.
Auto-regeneration: enabled for &#39;/Users/baixinpan/Desktop/OpenSource/Mine/Page-Blog/leopardpan.github.io-github&#39;
Configuration file: /Users/baixinpan/Desktop/OpenSource/Mine/Page-Blog/leopardpan.github.io-github/_config.yml
    Server address: http://127.0.0.1:4000/
  Server running... press ctrl-c to stop.
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;表示本地服务部署成功。&lt;/p&gt;

&lt;p&gt;在浏览器输入 &lt;a href=&quot;127.0.0.1:4000&quot;&gt;127.0.0.1:4000&lt;/a&gt; ， 就可以看到&lt;a href=&quot;http://leezhiy.github.io&quot;&gt;leezhiy.github.io&lt;/a&gt;博客效果了。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;修改成你自己的博客&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;如果你想使用我的模板请把 _posts/ 目录下的文章都去掉。&lt;/li&gt;
    &lt;li&gt;修改 _config.yml 文件里面的内容为你自己的。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后使用 git push 到你自己的仓库里面去，检查你远端仓库，就会发现，你有一个漂亮的主题模板了。&lt;/p&gt;

&lt;h3 id=&quot;jekyll-1&quot;&gt;为什么要是用 Jekyll&lt;/h3&gt;

&lt;p&gt;使用了 Jekyll 你会发现如果你想使用多台电脑发博客都很方便，只要把远端 github 仓库里的博客 clone 下来，写文章后再提交就可以了&lt;/p&gt;
</description>
                <link>/jekyll/2016/10/15/github+jekyll</link>
                <guid>/jekyll/2016/10/15/github+jekyll</guid>
                <pubDate>Sat, 15 Oct 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>php+swoole即时聊天</title>
                <description>&lt;div class=&quot;repository-meta js-details-container &quot;&gt;
&lt;div class=&quot;repository-description&quot;&gt;
&lt;p&gt;使用PHP+Swoole实现的网页即时聊天工具&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot; list-paddingleft-2&quot;&gt;
&lt;li&gt;
&lt;p&gt;全异步非阻塞Server，可以同时支持数百万TCP连接在线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同时支持websocket+comet2种兼容协议，可用于所有种类的浏览器包括IE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拥有完整的UI界面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持单聊/群聊/组聊等功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持发送表情&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持永久保存聊天记录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于Server PUSH的即时内容更新，登录/登出/状态变更/消息等会内容即时更新&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最新的版本已经可以原生支持IE系列浏览器了，基于Http长连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;articleHeader0&quot;&gt;&lt;a aria-hidden=&quot;true&quot; id=&quot;user-content-安装&quot; class=&quot;anchor&quot; href=&quot;https://github.com/matyhtf/PHPWebIM#%E5%AE%89%E8%A3%85&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;p&gt;swoole扩展&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;pecl install swoole&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;swoole框架&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;composer install&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;articleHeader1&quot;&gt;&lt;a aria-hidden=&quot;true&quot; id=&quot;user-content-运行&quot; class=&quot;anchor&quot; href=&quot;https://github.com/matyhtf/PHPWebIM#%E8%BF%90%E8%A1%8C&quot;&gt;&lt;/a&gt;运行&lt;/h2&gt;
&lt;p&gt;将client目录配置到Nginx/Apache的虚拟主机目录中，使client/index.html可访问。修改client/config.js中，IP和端口为对应的配置。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;php webim_server.php&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;articleHeader2&quot;&gt;&lt;a aria-hidden=&quot;true&quot; id=&quot;user-content-详细部署说明&quot; class=&quot;anchor&quot; href=&quot;https://github.com/matyhtf/PHPWebIM#%E8%AF%A6%E7%BB%86%E9%83%A8%E7%BD%B2%E8%AF%B4%E6%98%8E&quot;&gt;&lt;/a&gt;详细部署说明&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1.安装composer(php依赖包工具)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;curl -sS https://getcomposer.org/installer &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; php
mv composer.phar /usr/local/bin/composer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：如果未将php解释器程序设置为环境变量PATH中，需要设置。因为composer文件第一行为#!/usr/bin/env php，并不能修改。更加详细的对composer说明：&lt;a href=&quot;http://blog.csdn.net/zzulp/article/details/18981029&quot;&gt;http://blog.csdn.net/zzulp/article/details/18981029&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.composer install&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;切换到PHPWebIM项目目录，执行指令composer install，如很慢则&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;composer install --prefer-dist&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.Ningx/Apache配置（这里未使用swoole_framework提供的Web AppServer）&lt;/p&gt;
&lt;p&gt;nginx&lt;/p&gt;&lt;pre class=&quot;brush:shell; toolbar: true; auto-links: false;&quot;&gt;server
{
    listen       80;
    server_name  im.swoole.com;
    index index.shtml index.html index.htm index.php;
    root  /path/to/PHPWebIM/client;
    location ~ .*\.(php|php5)?$
    {
        fastcgi_pass  127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi.conf;
    }
    access_log  /Library/WebServer/nginx/logs/im.swoole.com  access;
}&lt;/pre&gt; &lt;p&gt;&lt;/p&gt;
&lt;p&gt;apache&lt;/p&gt;&lt;pre class=&quot;brush:shell; toolbar: true; auto-links: false;&quot;&gt;&amp;lt;VirtualHost *:80&amp;gt;
    DocumentRoot &quot;path/to/PHPWebIM/client&quot;
    ServerName im.swoole.com
    AddType application/x-httpd-php .php
    &amp;lt;Directory /&amp;gt;
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
        DirectoryIndex index.php
    &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;&lt;/pre&gt; &lt;p&gt;&lt;/p&gt;
&lt;p&gt;4.修改配置PHPWebIM/config.php&lt;/p&gt;&lt;pre class=&quot;brush:php; toolbar: true; auto-links: false;&quot;&gt;$config[&#39;server&#39;] = array(
    //监听的HOST
    &#39;host&#39; =&amp;gt; &#39;0.0.0.0&#39;,
    //监听的端口
    &#39;port&#39; =&amp;gt; &#39;9503&#39;,
    //WebSocket的URL地址，供浏览器使用的
    &#39;url&#39; =&amp;gt; &#39;ws://127.0.0.1:9503&#39;,
);&lt;/pre&gt; &lt;p&gt;&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li&gt;server.host server.port 项为WebIM服务器即WebSocket服务器的IP与端口，其他选择项根据具体情况修改&lt;/li&gt;
&lt;li&gt;server.url对应的就是服务器IP或域名以及websocket服务的端口，这个就是提供给浏览器的WebSocket地址&lt;/li&gt;
&lt;li&gt;webim.data_dir用于修改聊天记录存储的目录，必须有可写权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5.启动WebSocket服务器&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;php PHPWebIM/webim_server.php&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IE浏览器不支持WebSocket，需要使用FlashWebSocket模拟，请修改flash_policy.php中对应的端口，然后启动flash_policy.php。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;php PHPWebIM/flash_policy.php&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;6.绑定host与访问聊天窗口（可选）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果URL直接使用IP:PORT，这里不需要设置。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;vi /etc/hosts&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;增加&lt;/p&gt;
&lt;div class=&quot;highlight highlight-shell&quot;&gt;&lt;pre&gt;127.0.0.1 im.swoole.com&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用浏览器打开：&lt;a href=&quot;http://im.swoole.com/&quot;&gt;http://im.swoole.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;articleHeader3&quot;&gt;&lt;a aria-hidden=&quot;true&quot; id=&quot;user-content-快速了解项目架构&quot; class=&quot;anchor&quot; href=&quot;https://github.com/matyhtf/PHPWebIM#%E5%BF%AB%E9%80%9F%E4%BA%86%E8%A7%A3%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84&quot;&gt;&lt;/a&gt;快速了解项目架构&lt;/h2&gt;
&lt;p&gt;1.目录结构&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs cpp&quot;&gt;+ PHPWebIM
  |- webim_server.php &lt;span class=&quot;hljs-comment&quot;&gt;//WebSocket协议服务器&lt;/span&gt;
  |- config.php &lt;span class=&quot;hljs-comment&quot;&gt;// swoole运行配置&lt;/span&gt;
  |+ swoole.ini &lt;span class=&quot;hljs-comment&quot;&gt;// WebSocket协议实现配置&lt;/span&gt;
  |+ client
    |+ &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt;
    |- config.js &lt;span class=&quot;hljs-comment&quot;&gt;// WebSocket client配置&lt;/span&gt;
    |- index.html &lt;span class=&quot;hljs-comment&quot;&gt;// 登录界面&lt;/span&gt;
    |- main.html &lt;span class=&quot;hljs-comment&quot;&gt;// 聊天室主界面&lt;/span&gt;
  |+ data &lt;span class=&quot;hljs-comment&quot;&gt;// 运行数据&lt;/span&gt;
  |+ &lt;span class=&quot;hljs-built_in&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// swoole日志及WebIM日志&lt;/span&gt;
  |+ src &lt;span class=&quot;hljs-comment&quot;&gt;// WebIM 类文件储存目录&lt;/span&gt;
    |+ Store
      |- File.php &lt;span class=&quot;hljs-comment&quot;&gt;// 默认用内存tmpfs文件系统(linux /dev/shm)存放天着数据，如果不是linux请手动修改$shm_dir&lt;/span&gt;
      |- Redis.php &lt;span class=&quot;hljs-comment&quot;&gt;// 将聊天数据存放到Redis&lt;/span&gt;
    |- Server.php &lt;span class=&quot;hljs-comment&quot;&gt;// 继承实现WebSocket的类，完成某些业务功能&lt;/span&gt;
  |+ vendor &lt;span class=&quot;hljs-comment&quot;&gt;// 依赖包目录&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;2.Socket Server与Socket Client通信数据格式&lt;/p&gt;
&lt;p&gt;如：登录&lt;/p&gt;
&lt;p&gt;Client发送数据&lt;/p&gt;
&lt;div class=&quot;highlight highlight-js&quot;&gt;&lt;pre&gt;{&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cmd&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;login&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;xdy&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;avatar&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://tp3.sinaimg.cn/1586005914/50/5649388281/1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Server响应登录&lt;/p&gt;
&lt;div class=&quot;highlight highlight-js&quot;&gt;&lt;pre&gt;{&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cmd&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;login&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;fd&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;31&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;xdy&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;avatar&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://tp3.sinaimg.cn/1586005914/50/5649388281/1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到cmd属性，client与server发送时数据都有指定，主要是用于client或者server的回调处理函数。&lt;/p&gt;
&lt;p&gt;3.需要理清的几种协议或者服务的关系&lt;/p&gt;
&lt;p&gt;http协议：超文本传输协议。单工通信，等着客户端请求之后响应。&lt;/p&gt;
&lt;p&gt;WebSocket协议：是HTML5一种新的协议，它是实现了浏览器与服务器全双工通信。服务器端口与客户端都可以推拉数据。&lt;/p&gt;
&lt;p&gt;Web服务器：此项目中可以用基于Swoole的App Server充当Web服务器，也可以用传统的nginx/apache作为web服务器&lt;/p&gt;
&lt;p&gt;Socket服务器：此项目中浏览器的WebSocket客户端连接的服务器，swoole_framework中有实现WebSocket协议PHP版本的服务器。&lt;/p&gt;
&lt;p&gt;WebSocket Client：实现html5的浏览器都支持WebSocket对象，如不支持此项目中有提供flash版本的实现。&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>/swoole/2016/10/14/php+swoole%E5%8D%B3%E6%97%B6%E8%81%8A%E5%A4%A9</link>
                <guid>/swoole/2016/10/14/php+swoole即时聊天</guid>
                <pubDate>Fri, 14 Oct 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>QQ群红包的算法实现探讨（基于PHP demo)</title>
                <description>&lt;p&gt;这个算法需要满足以下几点要求：&lt;/p&gt;

&lt;p&gt;1、每个人都要能够领取到红包；&lt;/p&gt;

&lt;p&gt;2、每个人领取到的红包金额总和=总金额；&lt;/p&gt;

&lt;p&gt;3、每个人领取到的红包金额不等，但也不能差的太离谱，不然就没趣味；&lt;/p&gt;

&lt;p&gt;4、算法一定要简单，不然对不起腾讯这个招牌；&lt;/p&gt;

&lt;p&gt;正式编码之前，先搭建一个递进的模型来分析规律
[php] &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;设定总金额为10元，有N个人随机领取：
N=1
则红包金额=X元；

N=2
为保证第二个红包可以正常发出，第一个红包金额=0.01至9.99之间的某个随机数
第二个红包=10-第一个红包金额；

N=3
红包1=0.01至0.98之间的某个随机数
红包2=0.01至(10-红包1-0.01)的某个随机数
红包3=10-红包1-红包2

……
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，规律出现啦！开始编码！
[php] &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;header(&quot;Content-Type: text/html;charset=utf-8&quot;);//输出不乱码，你懂的
$total=10;//红包总额
$num=8;// 分成8个红包，支持8人随机领取
$min=0.01;//每个人最少能收到0.01元

for ($i=1;$i&amp;lt;$num;$i++)
  {
      $safe_total=$total-($num-$i)*$min;//随机安全上限
      $money=mt_rand($min*100,$safe_total*100)/100;
      $total=$total-$money;
      echo &#39;第&#39;.$i.&#39;个红包：&#39;.$money.&#39; 元，余额：&#39;.$total.&#39; 元 &amp;lt;br/&amp;gt;&#39;;
  }
 echo &#39;第&#39;.$num.&#39;个红包：&#39;.$total.&#39; 元，余额：0 元&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入一看，波动太大，这数据太无趣了！
[php] &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;第1个红包：7.48 元，余额：2.52 元
第2个红包：1.9 元，余额：0.62 元
第3个红包：0.49 元，余额：0.13 元
第4个红包：0.04 元，余额：0.09 元
第5个红包：0.03 元，余额：0.06 元
第6个红包：0.03 元，余额：0.03 元
第7个红包：0.01 元，余额：0.02 元
第8个红包：0.02 元，余额：0 元
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;改良一下，将平均值作为随机安全上限来控制波动差&lt;/p&gt;

&lt;p&gt;[php] &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;header(&quot;Content-Type: text/html;charset=utf-8&quot;);//输出不乱码，你懂的
$total=10;//红包总额
$num=8;// 分成8个红包，支持8人随机领取
$min=0.01;//每个人最少能收到0.01元

for ($i=1;$i&amp;lt;$num;$i++)
{
    $safe_total=($total-($num-$i)*$min)/($num-$i);//随机安全上限
    $money=mt_rand($min*100,$safe_total*100)/100;
    $total=$total-$money;
    echo &#39;第&#39;.$i.&#39;个红包：&#39;.$money.&#39; 元，余额：&#39;.$total.&#39; 元 &amp;lt;br/&amp;gt;&#39;;
}
  echo &#39;第&#39;.$num.&#39;个红包：&#39;.$total.&#39; 元，余额：0 元&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出结果见下图
[php] &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;第1个红包：0.06 元，余额：9.94 元
第2个红包：1.55 元，余额：8.39 元
第3个红包：0.25 元，余额：8.14 元
第4个红包：0.98 元，余额：7.16 元
第5个红包：1.88 元，余额：5.28 元
第6个红包：1.92 元，余额：3.36 元
第7个红包：2.98 元，余额：0.38 元
第8个红包：0.38 元，余额：0 元  &lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

</description>
                <link>/qq/2016/08/12/qq%E7%BA%A2%E5%8C%85</link>
                <guid>/qq/2016/08/12/qq红包</guid>
                <pubDate>Fri, 12 Aug 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>php的4中开源框架（TP，CI，Laravel，Yii）</title>
                <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ThinkPHP简称TP，TP借鉴了&lt;a href=&quot;http://lib.csdn.net/base/javaee&quot; class=&quot;replace_word&quot; title=&quot;Java EE知识库&quot; target=&quot;_blank&quot; style=&quot;color:#df3434; font-weight:bold;&quot;&gt;Java&lt;/a&gt;思想，基于PHP5，充分利用了PHP5的特性，部署简单只需要一个入口文件，一起搞定，简单高效。中文文档齐全，入门超级简单。自带模板引擎，具有独特的数据验证和自动填充功能，框架更新速度比较速度。&lt;/p&gt;

&lt;p&gt;优点：这个框架易使用 易学 安全 对bae sae支持很好提供的工具也很强大 可以支持比较大的项目开发 易扩展 全中文文档 总的来说这款框架适合非常适合国人使用 性能 上比CI还要强一些&lt;/p&gt;

&lt;p&gt;缺点：配置对有些人来说有些复杂（其实是因为没有认真的读过其框架源码）文档有些滞后 有些组件未有文档说明。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CodeIgniter简称CI 简单配置，上手很快，全部的配置使用&lt;a href=&quot;http://lib.csdn.net/base/php&quot; class=&quot;replace_word&quot; title=&quot;PHP知识库&quot; target=&quot;_blank&quot; style=&quot;color:#df3434; font-weight:bold;&quot;&gt;PHP&lt;/a&gt;脚本来配置，没有使用很多太复杂的设计模式，（MVC设计模式）执行性能和代码可读性上都不错。执行效率较高，具有基本的MVC功能，快速简洁，代码量少，框架容易上手，自带了很多简单好用的library。 框架适合中小型项目，大型项目也可以，只是扩展能力差。优点：这个框架的入门槛很底 极易学 极易用 框架很小 静态化非常容易 框架易扩展 文档比较详尽&lt;/p&gt;

&lt;p&gt;缺点：在极易用的极小下隐藏的缺点即是不安全 功能不是太全 缺少非常多的东西 比如你想使用&lt;a href=&quot;http://lib.csdn.net/base/mongodb&quot; class=&quot;replace_word&quot; title=&quot;MongoDB知识库&quot; target=&quot;_blank&quot; style=&quot;color:#df3434; font-weight:bold;&quot;&gt;MongoDB&lt;/a&gt;你就得自己实现接口… 对数据的操作亦不是太安全 比如对update和delete操作等不够安全 暂不支持sae bae等（毕竟是欧洲）对大型项目的支持不行 小型项目会非常好。&lt;/p&gt;

&lt;p&gt;CI和TP的对比（&lt;a href=&quot;http://www.jcodecraeer.com/a/phpjiaocheng/2012/0711/309.html&quot;&gt;http://www.jcodecraeer.com/a/phpjiaocheng/2012/0711/309.html&lt;/a&gt;）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Laravel的设计思想是很先进的，非常适合应用各种开发模式TDD, DDD和BDD（&lt;a href=&quot;http://blog.csdn.net/bennes/article/details/47973129&quot;&gt;http://blog.csdn.net/bennes/article/details/47973129&lt;/a&gt; TDD DDD BDD解释 ），作为一个框架，它为你准备好了一切，composer是个php的未来，没有composer，PHP肯定要走向没落。laravel最大的特点和处优秀之就是集合了php比较新的特性，以及各种各样的设计模式，Ioc容器，依赖注入等。因此laravel是一个适合学习的框架，他和其他的框架思想有着极大的不同，这也要求你非常熟练php，基础扎实。 &lt;/p&gt;

&lt;p&gt;优点：&lt;a href=&quot;http://www.codeceo.com/article/why-laravel-best-php-framework.html&quot;&gt;http://www.codeceo.com/article/why-laravel-best-php-framework.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Yii是一个基于组件的高性能的PHP的框架，用于开发大规模Web应用。Yii采用严格的OOP编写，并有着完善的库引用以及全面的教程。从MVC，DAO/ActiveRecord，widgets，caching，等级式RBAC，Web服务，到主体化，I18N和L10N，Yii提供了今日Web 2.0应用开发所需要的几乎一切功能。而且这个框架的价格也并不太高。事实上，Yii是最有效率的PHP框架之一。&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
                <link>/tp%EF%BC%8Cci%EF%BC%8Claravel%EF%BC%8Cyii/2016/08/06/%E8%AF%A6%E7%BB%86%E8%AF%B4%E6%98%8Ephp%E7%9A%844%E4%B8%AD%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6</link>
                <guid>/tp%EF%BC%8Cci%EF%BC%8Claravel%EF%BC%8Cyii/2016/08/06/ 详细说明php的4中开源框架</guid>
                <pubDate>Sat, 06 Aug 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>linux介绍及Php环境搭建</title>
                <description>&lt;p&gt;Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了Linux内核。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。&lt;/p&gt;

&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
centos发布7.0版本，新版本带来很多特性，除了内核更新到3.10外，支持 Linux 容器、Open VMware Tools 及 3D 图像能即装即用，转用 systemd、firewalld 及 GRUB2 ，而默认的文件系统为XFS等等,可以说是比较重大的升级。笔者尝试了使用Centos7搭建LAMP服务器平台，记录如下。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;1.启用Apache2&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	Centos7默认已经安装httpd服务，只是没有启动。如果你需要全新安装，可以yum install -y httpd&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	启动服务：systemctl start httpd.service&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	设置开机自动启动：systemctl enable httpd.service&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	HTTP服务器已经启动，进行一下简单配置&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	vi /etc/httpd/conf/httpd.conf&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#编辑文件&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	ServerSignature On &amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#添加，在错误页中显示Apache的版本，Off为不显示&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	Options Indexes FollowSymLinks &amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	#AddHandler cgi-script .cgi　&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#修改为：AddHandler cgi-script .cgi .pl （允许扩展名为.pl的CGI脚本运行）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	AllowOverride None　&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#修改为：AllowOverride All （允许.htaccess）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	AddDefaultCharset UTF-8　&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	#Options Indexes FollowSymLinks &amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#修改为 Options FollowSymLinks（不在浏览器上显示树状目录结构）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	DirectoryIndex index.html &amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#修改为：DirectoryIndex index.html index.htm Default.html Default.htm index.php（设置默认首页文件，增加index.php）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	MaxKeepAliveRequests 500 &amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#添加MaxKeepAliveRequests 500 （增加同时连接数）&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	:wq!&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#保存退出&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	systemctl restart httpd.service&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#重启apache&amp;nbsp;&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;&amp;nbsp;#删除默认测试页&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;2.设置防火墙&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	Centos7下的防火墙已经由iptables改为firewall，使用firewall-cmd命令开放80及443端口:&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	firewall-cmd –permanent –zone=public –add-service=http&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	firewall-cmd –permanent –zone=public –add-service=https&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	firewall-cmd –reload&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	设置SELinux为permissive模式 命令行下 setenforce 0 立即生效，重启失效。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	编辑 vim/etc/sysconfig/selinux &amp;nbsp;SELinux=enforcing 修改为disabled 关闭SELinux，重启永久生效。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	笔者ip为192.168.1.108，测试下服务器能否打开，浏览器http://192.168.1.108回车后看到欢迎页面，说明服务器正常运行。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;3.安装MariaDB数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	CentOS 7.0中，已经使用MariaDB替代了MySQL数据库,原因你懂的,MYSQL被Oracle收购以后，前景堪忧，所以MYSQL兄弟MariaDB就出来了，继续开源事业。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	安装：yum -y install mariadb-server mariadb&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	启动：systemctl start mariadb.service&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 4em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	&amp;nbsp; &amp;nbsp; &amp;nbsp; systemctl enable mariadb.service&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	配置：cp /usr/share/mysql/my-huge.cnf /etc/my.cnf &amp;nbsp;覆盖原配置就好了。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	设置数据库管理员密码：&lt;span style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; text-indent: 2em; background: transparent;&quot;&gt;mysql_secure_installation &amp;nbsp; 一路y就可以了，当然第一次y后面要输入两次密码。&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;4.安装PHP5&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	安装PHP主程序： yum -y install php&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	安装PHP组件，使PHP支持 MariaDB&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	yum -y install php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	重启： systemctl restart httpd.service&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	配置： vi /etc/php.ini&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	date.timezone = PRC&amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#把前面的分号去掉，改为date.timezone = PRC&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	disable_functions = passthru,exec,system……&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#列出PHP可以禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	expose_php = Off&amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#禁止显示php版本的信息&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	short_open_tag = ON&amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#支持php短标签&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	open_basedir = .:/tmp/ &amp;nbsp;&lt;em style=&quot;margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background: transparent;&quot;&gt;#设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题(例如：织梦内容管理系统)，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	测试一下：vi /var/www/html/index.php &amp;nbsp;输入&amp;lt;?php phpinfo(); ?&amp;gt; &amp;nbsp;wq保存退出。打开http://192.168.1.108 如果能看到PHP配置信息页，说明PHP服务器正常。&lt;/p&gt;
&lt;p style=&quot;margin: 10px 0px; padding: 0px; border: 0px; outline: 0px; font-size: 14px; vertical-align: baseline; color: rgb(51, 51, 51); font-family: &#39;Microsoft YaHei&#39;, &#39;Lucida Grande&#39;, Arial, Tahoma, sans-serif; letter-spacing: 0.266666680574417px; line-height: 19.6000003814697px; word-spacing: 1.46666669845581px; text-indent: 2em; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;
	至此，LAMP平台就搭建好了，您可以在上面搭建Worldpress网站了，当然，如果你觉得数据库管理起来比较麻烦的话，也可以用yum install phpMyAdmin安装图形化管理工具。&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</description>
                <link>/linux/2016/04/11/linux</link>
                <guid>/linux/2016/04/11/linux</guid>
                <pubDate>Mon, 11 Apr 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Linux下配置 Keepalived（心跳检测部署） !</title>
                <description>&lt;h5&gt;&lt;a id=&quot;user-content-首先呢我想先给大家简单介绍一下什么是keepalived&quot; class=&quot;anchor&quot; href=&quot;#首先呢我想先给大家简单介绍一下什么是keepalived&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;首先呢，我想先给大家简单介绍一下什么是keepalived：&lt;/h5&gt;

&lt;p&gt;Keepalived的作用是检测服务器的状态，如果有一台web服务器死机，或工作出现故障，Keepalived将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作，当服务器工作正常后Keepalived自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。&lt;/p&gt;

&lt;p&gt;1.准备两台服务器&lt;/p&gt;

&lt;p&gt;主服务器：192.168.1.111&lt;/p&gt;

&lt;p&gt;从服务器：192.168.1.199&lt;/p&gt;

&lt;p&gt;虚拟ip:192.168.1.223&lt;/p&gt;

&lt;p&gt;两台机器安装&lt;/p&gt;

&lt;p&gt;2.安装keepalived需要的依赖包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
yum install openssl-devel
yum install popt-devel
yum install ipvsadm
yum install libnl*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.下载keepalived&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
yum install keepalived
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.修改主服务器配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
vim /etc/keepalived/keepalived.conf
! Configuration File for keepalived

global_defs {
   notification_email {
     #acassen@firewall.loc没有服务器配置邮箱可将其注释掉
     #failover@firewall.loc
     #sysadmin@firewall.loc
   }
   #notification_email_from Alexandre.Cassen@firewall.loc
   #smtp_server 192.168.200.1
   #smtp_connect_timeout 30
   router_id LVS_DEVEL
}

vrrp_instance VI_1 {
    state MASTER
    interface eno16777736 #绑定虚拟IP的网络接口
    virtual_router_id 51#和slave一样
    priority 100#主机高于slave
    advert_int 1#检测服务器状态间隔时间
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
       &amp;nbsp;192.168.1.223#虚拟IP地址，可以为多个
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;开启服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
systemctl start keepalived
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.修改slave配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
vim /etc/keepalived/keepalived.conf
! Configuration File for keepalived

global_defs {
  #notification_email {
  #  644856452@qq.com
  #}
  #notification_email_from Alexandre.Cassen@firewall.loc
  #smtp_server 127.0.0.1
  #smtp_connect_timeout 30
  router_id LVS_DEVEL
}

vrrp_instance VI_1 {
   state SLAVE
   interface eno16777736
   virtual_router_id 51
   priority 80#低于主服务器100
   advert_int 1
   authentication {
       auth_type PASS
       auth_pass 1111#验证密码，两台机器保持一致
   }

  &amp;nbsp;virtual_ipaddress {
       192.168.1.223
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;开启服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
systemctl start keepalived
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1.启动两台机器上的nginx&lt;/p&gt;

&lt;p&gt;2.启动两台机器上的keepalived&lt;/p&gt;

&lt;p&gt;此时使用命令 ip addr 查看虚拟IP绑定 可以看到主 有，从没有，将主机的keepalived关掉，可以看到vip绑定到了从的上面。&lt;/p&gt;

&lt;p&gt;那么如何根据服务某个端口的开与关来进行虚拟Ip的绑定呢？&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Vim /usr/share/doc/keepalived-1.2.13/samples/keepalived.conf.vrrp.localcheck
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考提供的例子&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Configuration File for keepalived
vrrp_script chk_http_port {
       script &quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将将以上信息复制到两台服务器的/etc/keepalived/keepalived.conf文件里
变成如下，参考，注意从机不一样，为了讲清楚上面的信息放入的位置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
global_defs {
   notification_email {
     acassen@firewall.loc
     failover@firewall.loc
     sysadmin@firewall.loc
   }
   notification_email_from Alexandre.Cassen@firewall.loc
   smtp_server 192.168.200.1
   smtp_connect_timeout 30
   router_id LVS_DEVEL
}
vrrp_script chk_http_port {
       script &quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;此时再重启两台机器的keepalived服务&lt;/p&gt;

&lt;p&gt;Systemctl restart keepalived&lt;/p&gt;

&lt;p&gt;此时分别关闭主机80和3306端口服务&lt;/p&gt;

&lt;p&gt;可以发现虚拟Ip绑定到了从机上。&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/code&amp;gt;&amp;lt;/code&amp;gt;&lt;/p&gt;
</description>
                <link>/linux/2016/04/02/Linux%E4%B8%8B%E9%85%8D%E7%BD%AE-Keepalived-%E5%BF%83%E8%B7%B3%E6%A3%80%E6%B5%8B%E9%83%A8%E7%BD%B2-!</link>
                <guid>/linux/2016/04/02/Linux下配置 Keepalived（心跳检测部署） !</guid>
                <pubDate>Sat, 02 Apr 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>PHP面向对象编程</title>
                <description>&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;1.&lt;/span&gt;&lt;/span&gt;声明一个类&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;在&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;php&lt;/span&gt;&lt;/span&gt;中使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;class&lt;/span&gt;&lt;/span&gt;关键字创建一个新类，类包括属性与方法。语法格式如下：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 694px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_1&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_1&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=1&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;类名{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;属性；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;方法；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
 class类名{
  属性；
  方法；
 }
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;2.&lt;/span&gt;&lt;/span&gt;创建一个实例对象&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;创建对象的过程称为实例化，对象被创建时就包含&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;3&lt;/span&gt;&lt;/span&gt;个特性：对象句柄，对象属性，对象方法；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;对象句柄：用于区分不同的对象。对象创建好了就会获取一块存储空间，存储空间的地址即为对象的标识，也就是对象的句柄。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;对象属性：用于描述对象的静态特征。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;对象方法：用于描述对象的动态特征。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;如果要创建一个新的且唯一的对象，可使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;&lt;/span&gt;引用符号。例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 1149px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_2&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_2&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=2&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;$对象名称&amp;nbsp;=&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;amp;类名称();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
 $对象名称 = new &amp;amp;类名称();
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;当类实例化后，可以使用操作符&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&#39;-&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;来调用对该对象的属性和方法。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;3.&lt;/span&gt;&lt;/span&gt;类的属性与方法&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;属性的声明：关键字&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;成员变量名&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;关键字可以是&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;public,private,protected,static&lt;/span&gt;&lt;/span&gt;中的任意一个，默认是&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;public&lt;/span&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;4.&lt;/span&gt;&lt;/span&gt;类的常量&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;常量使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;const&lt;/span&gt;&lt;/span&gt;关键字来定义一个类的常量。类常量不与这个类的任何特定实例相关联，所以不可以使用间接引用操作符来访问它们。类常量通常要大写，如果多个类常量由多个单词组成，建议使用下划线将它们分开。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;5.&lt;/span&gt;&lt;/span&gt;类的构造方法和析构方法&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;构造方法：一个类中只能有一个构造方法，构造方法不会被调用，只有在使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;new&lt;/span&gt;&lt;/span&gt;关键字创建对象的时候才会调用构造方法。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 1695px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_3&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_3&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=3&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;类名{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;function__construct(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;初始化语句;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
 class类名{
  function__construct(){
   初始化语句;
  }
 }
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;在工作中，也可以调用和实例化对象没有任何关系的类构造函数，只须在&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;__construct&lt;/span&gt;&lt;/span&gt;前面加上类名，例如：类名&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;::__construcr();&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;析构方法：析构方法与构造方法是相对的，它在某个对象中的所有引用都被删除或对象被显式销毁时执行。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 2061px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_4&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_4&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=4&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;类名{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;__destruct(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;初始化语句;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
  class类名{
   function __destruct(){
   初始化语句;
   }
  }
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;脚本执行结束时，&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;PHP&lt;/span&gt;&lt;/span&gt;会撤销内存中的所有对象，因此，如果实例化的类和实例时创建的信息都留在内存中，就不需要显示地声明析构函数。但是，如果实例化时创建了不容易丢失的数据，就应该在对象撤销时撤销这些数据，因此就需要定制析构函数。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;6.&lt;/span&gt;&lt;/span&gt;静态属性与方法&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;将类中的属性与方法声明为静态的就叫做静态方法。静态方法不受任何具体对象的限制，所以不需要建立实例就可以直接引用类中的静态方法。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;调用方式：类名称&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;::&lt;/span&gt;&lt;/span&gt;静态方法名称&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:WenQuanYi Micro Hei Mono&quot;&gt;注释：&lt;/span&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-family:WenQuanYi Micro Hei Mono,serif&quot;&gt;&#39;::&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:WenQuanYi Micro Hei Mono&quot;&gt;符号称为范围解析操作符，它可以用于访问静态成员，静态方法和常量，还可以用于覆盖类中的成员和方法。例如：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 2570px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_5&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_5&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=5&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;sta_num{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$num&lt;/span&gt;&lt;span&gt;=0;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;sta_num::&lt;span class=&quot;vars&quot;&gt;$num&lt;/span&gt;&lt;span&gt;++;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
  class sta_num{
   static$num=0;
  }
  sta_num::$num++;
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;如果想在同一类的成员方法中访问静态属性，可以通过在该静态属性的名称前加上操作符&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&#39;self::&#39;&lt;/span&gt;&lt;/span&gt;来实现。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 2883px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_6&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_6&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=6&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;sta_num{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$num&lt;/span&gt;&lt;span&gt;=0;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;add(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self::&lt;span class=&quot;vars&quot;&gt;$num&lt;/span&gt;&lt;span&gt;++;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;sta_num::&lt;span class=&quot;vars&quot;&gt;$num&lt;/span&gt;&lt;span&gt;++;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
  class sta_num{
   static$num=0;
   function add(){
    self::$num++;
   }
 }
 sta_num::$num++;
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;7.&lt;/span&gt;&lt;/span&gt;对象的克隆&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;通过&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;clone&lt;/span&gt;&lt;/span&gt;后可以得到的对象与原来的对象没有任何关系，它把原来对象的所有信息从内寻的位置中复制了一份，然后在内存中又开辟一个空间来存储克隆后的对象。例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 3286px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_7&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_7&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=7&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;calss&amp;nbsp;a{}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;vars&quot;&gt;$ojectA&lt;/span&gt;&lt;span&gt;=&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span&gt;&amp;nbsp;a();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;vars&quot;&gt;$objectB&lt;/span&gt;&lt;span&gt;=&amp;nbsp;clone&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$objectA&lt;/span&gt;&lt;span&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
 calss a{}
 $ojectA= new a();
 $objectB= clone $objectA;
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;如果在对象中定义了&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;_clone&lt;/span&gt;&lt;/span&gt;方法，则可以在对象被克隆时来调整克隆行为，此方法的代码将在克隆的操作期间来执行。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;8.&lt;/span&gt;&lt;/span&gt;继承&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;在&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;PHP&lt;/span&gt;&lt;/span&gt;中，使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;extends&lt;/span&gt;&lt;/span&gt;关键字来建立一个类的继承。格式如下：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 3618px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_8&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_8&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=8&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;子类名称&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;span&gt;&amp;nbsp;父类名称{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;子类属性；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;子类方法；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;class 子类名称 extends 父类名称{
  子类属性；
  子类方法；
}&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;当子类要调用父类的成员方法时需要用到关键字&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&#39;patent::&#39;,&lt;/span&gt;&lt;/span&gt;例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;parent::&lt;/span&gt;&lt;/span&gt;父类的成员方法&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;9.&lt;/span&gt;&lt;/span&gt;检测对象的类型&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;在&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;php&lt;/span&gt;&lt;/span&gt;中可以使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;instanceof&lt;/span&gt;&lt;/span&gt;运算符来检测当前对象是否属于同一个类。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;10.&lt;/span&gt;&lt;/span&gt;多态&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;（&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;）通过继承抽象类实现多态&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;抽象类里面至少包含一个由关键字&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;abstract&lt;/span&gt;&lt;/span&gt;修饰的抽象方法，抽象方法是不实现具体方法的空方法。抽象类不能被实例化，只能由子类去继承，然后在继承的子类中完成具体功能。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;例如：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 4146px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_9&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_9&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=9&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;work{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;work_name(&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$name&lt;/span&gt;&lt;span&gt;);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;man&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;span&gt;&amp;nbsp;work{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;work_name(&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$name&lt;/span&gt;&lt;span&gt;){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;func&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$name&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;is&amp;nbsp;true&#39;&lt;/span&gt;&lt;span&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;woman&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;span&gt;&amp;nbsp;work{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;work_name(&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$name&lt;/span&gt;&lt;span&gt;){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;func&quot;&gt;echo&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;vars&quot;&gt;$name&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;is&amp;nbsp;false&#39;&lt;/span&gt;&lt;span&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
 abstract class work{
  abstract function work_name($name);
 }
 class man extends work{
 function work_name($name){
  echo$name.&#39;is true&#39;;
 }
}
class woman extends work{
 function work_name($name){
  echo $name.&#39;is false&#39;;
 }
}
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;对于&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;work&lt;/span&gt;&lt;/span&gt;类而言&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;man&lt;/span&gt;&lt;/span&gt;，&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;woman&lt;/span&gt;&lt;/span&gt;就是它多态的表现。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;（&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;2&lt;/span&gt;&lt;/span&gt;）通过接口实现多态&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;接口是一组成员方法声明的集合，它只包含一些空的成员方法或常量，这些空的成员方法将由实现该接口的类去实现。定义一个接口需要使用&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;interface&lt;/span&gt;&lt;/span&gt;声明，定义接口的方法如下：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 4693px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_10&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_10&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=10&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&lt;span&gt;&amp;nbsp;接口名称{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;类常量；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;成员方法_1;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;成员方法_2;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;interface 接口名称{
 类常量；
 function 成员方法_1;
 function 成员方法_2;
}
&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
在接口中不存在构造方法和析构方法，接口可以被继承，它可以继承多个接口，而不能继承一个类。接口的实现需要使用关键字&lt;span style=&quot;font-size:16px; font-family:&#39;Liberation Serif&#39;,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;implements&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:16px&quot;&gt;。当使用类来实现接口时，必须包含接口定义的所有方法，否则在运行时会出现错误。例如：&lt;/span&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 4953px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_11&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_11&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=11&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?php&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&lt;span&gt;&amp;nbsp;people{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;favourate_sport();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;children&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt;&lt;span&gt;&amp;nbsp;people{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;favourate_sport(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;方法体；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;student&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt;&lt;span&gt;&amp;nbsp;people{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span&gt;&amp;nbsp;favourate_sport(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;方法体；&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;?&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;save_code tracking-ad&quot; data-mod=&quot;popu_249&quot; style=&quot;display: none;&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;http://static.blog.csdn.net/images/save_snippets.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre name=&quot;code&quot; class=&quot;php&quot; style=&quot;display: none;&quot;&gt;&amp;lt;?php
  interface people{
   function favourate_sport();
  }
  class  children implements people{
  function favourate_sport(){
  方法体；
  }
 }
 class student implements people{
   function favourate_sport(){
    方法体；
   }
 }
?&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;cjk&quot; style=&quot;margin-bottom:0cm&quot; align=&quot;LEFT&quot;&gt;&lt;span style=&quot;font-size:16px&quot;&gt;对于接口&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;people&lt;/span&gt;&lt;/span&gt;而言，类&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;children&lt;/span&gt;&lt;/span&gt;和&lt;span style=&quot;font-family:Liberation Serif,serif&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;student&lt;/span&gt;&lt;/span&gt;就是其多态的表现。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;dp-highlighter bg_php&quot;&gt;&lt;div class=&quot;bar&quot;&gt;&lt;div class=&quot;tools&quot;&gt;&lt;b&gt;[php]&lt;/b&gt; &lt;a href=&quot;#&quot; class=&quot;ViewSource&quot; title=&quot;view plain&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;&quot;&gt;view plain&lt;/a&gt;&lt;span data-mod=&quot;popu_168&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;CopyToClipboard&quot; title=&quot;copy&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;&quot;&gt;copy&lt;/a&gt;&lt;div style=&quot;position: absolute; left: 488px; top: 5393px; width: 24px; height: 13px; z-index: 99;&quot;&gt;&lt;embed id=&quot;ZeroClipboardMovie_12&quot; src=&quot;http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf&quot; loop=&quot;false&quot; menu=&quot;false&quot; quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot; name=&quot;ZeroClipboardMovie_12&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;false&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; flashvars=&quot;id=12&amp;amp;width=24&amp;amp;height=13&quot; wmode=&quot;transparent&quot; height=&quot;13&quot; width=&quot;24&quot; align=&quot;middle&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;span data-mod=&quot;popu_169&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;PrintSource&quot; title=&quot;print&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;&quot;&gt;print&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;#&quot; class=&quot;About&quot; title=&quot;?&quot; onclick=&quot;dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-c&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;pre&amp;nbsp;name=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;code&quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;pre&amp;nbsp;name=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;code&quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;p&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;cjk&quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;style=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;margin-bottom:0cm&quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;align=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;LEFT&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/pre&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;lt;/pre&amp;gt;&amp;nbsp;&amp;nbsp;&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;
</description>
                <link>/php/2016/03/21/PHP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B</link>
                <guid>/php/2016/03/21/PHP面向对象编程</guid>
                <pubDate>Mon, 21 Mar 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>PHP魔术方法和魔术常量介绍及使用</title>
                <description>&lt;h2 id=&quot;mabov&quot;&gt;魔术方法(&lt;span class=&quot;wp_keywordlink&quot;&gt;&lt;a href=&quot;http://www.codeceo.com/article/magic-javascript-ui.html&quot; title=&quot;Magic&quot; target=&quot;_blank&quot;&gt;Magic&lt;/a&gt;&lt;/span&gt; methods)&lt;/h2&gt;
&lt;p&gt;PHP中把以两个下划线&lt;code&gt;__&lt;/code&gt;开头的方法称为魔术方法，这些方法在PHP中充当了举足轻重的作用。 魔术方法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__construct()&lt;/code&gt;，类的构造函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__destruct()&lt;/code&gt;，类的析构函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__call()&lt;/code&gt;，在对象中调用一个不可访问方法时调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__callStatic()&lt;/code&gt;，用静态方式中调用一个不可访问方法时调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__get()&lt;/code&gt;，获得一个类的成员变量时调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__set()&lt;/code&gt;，设置一个类的成员变量时调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__isset()&lt;/code&gt;，当对不可访问属性调用&lt;code&gt;isset()&lt;/code&gt;或&lt;code&gt;empty()&lt;/code&gt;时调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__unset()&lt;/code&gt;，当对不可访问属性调用&lt;code&gt;unset()&lt;/code&gt;时被调用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__sleep()&lt;/code&gt;，执行&lt;code&gt;serialize()&lt;/code&gt;时，先会调用这个函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__wakeup()&lt;/code&gt;，执行&lt;code&gt;unserialize()&lt;/code&gt;时，先会调用这个函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__toString()&lt;/code&gt;，类被当成字符串时的回应方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__invoke()&lt;/code&gt;，调用函数的方式调用一个对象时的回应方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__set_state()&lt;/code&gt;，调用&lt;code&gt;var_export()&lt;/code&gt;导出类时，此静态方法会被调用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__clone()&lt;/code&gt;，当对象复制完成时调用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tezyp&quot;&gt;&lt;code&gt;__construct()&lt;/code&gt;和&lt;code&gt;__destruct()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;构造函数和析构函数应该不陌生，他们在对象创建和消亡时被调用。例如我们需要打开一个文件，在对象创建时打开，对象消亡时关闭&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FileRead&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; $handle = &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;handle = fopen(...);
    }

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__destruct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{
        fclose(&lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;handle);
    }
}
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;这两个方法在继承时可以扩展，例如：&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TmpFileRead&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FileRead&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;parent&lt;/span&gt;::__construct();
    }

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__destruct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;parent&lt;/span&gt;::__destruct();
    }
}
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h3 id=&quot;ozasa&quot;&gt;&lt;code&gt;__call()&lt;/code&gt;和&lt;code&gt;__callStatic()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;在对象中调用一个不可访问方法时会调用这两个方法，后者为静态方法。这两个方法我们在可变方法（Variable functions）调用中可能会用到。&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MethodTest&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__call&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;($name, $arguments)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Calling object method &#39;$name&#39; &quot;&lt;/span&gt;. implode(&lt;span class=&quot;hljs-string&quot;&gt;&#39;, &#39;&lt;/span&gt;, $arguments). &lt;span class=&quot;hljs-string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__callStatic&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;($name, $arguments)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Calling static method &#39;$name&#39; &quot;&lt;/span&gt;. implode(&lt;span class=&quot;hljs-string&quot;&gt;&#39;, &#39;&lt;/span&gt;, $arguments). &lt;span class=&quot;hljs-string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;
    }
}

$obj = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MethodTest;
$obj-&amp;gt;runTest(&lt;span class=&quot;hljs-string&quot;&gt;&#39;in object context&#39;&lt;/span&gt;);
MethodTest::runTest(&lt;span class=&quot;hljs-string&quot;&gt;&#39;in static context&#39;&lt;/span&gt;);
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h3 id=&quot;ejtvq&quot;&gt;&lt;code&gt;__get()&lt;/code&gt;，&lt;code&gt;__set()&lt;/code&gt;，&lt;code&gt;__isset()&lt;/code&gt;和&lt;code&gt;__unset()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;当get/set一个类的成员变量时调用这两个函数。例如我们将对象变量保存在另外一个数组中，而不是对象本身的成员变量&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MethodTest&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; $data = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__set&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($name, $value)&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;data[$name] = $value;
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__get&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($name)&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(array_key_exists($name, &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;data))
            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;data[$name];
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__isset&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($name)&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;data[$name])
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($name)&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;unset&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;data[$name]);
    }
}
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h3 id=&quot;qukds&quot;&gt;&lt;code&gt;__sleep()&lt;/code&gt;和&lt;code&gt;__wakeup()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;当我们在执行&lt;code&gt;serialize()&lt;/code&gt;和&lt;code&gt;unserialize()&lt;/code&gt;时，会先调用这两个函数。例如我们在序列化一个对象时，这个对象有一个数据库链接，想要在反序列化中恢复链接状态，则可以通过重构这两个函数来实现链接的恢复。例子如下：&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Connection&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; $link;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; $server, $username, $password, $db;

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($server, $username, $password, $db)&lt;/span&gt;
    &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;server = $server;
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;username = $username;
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;password = $password;
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;db = $db;
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;connect();
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;link = mysql_connect(&lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;server, &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;username, &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;password);
        mysql_select_db(&lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;db, &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;link);
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__sleep&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&#39;server&#39;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&#39;username&#39;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&#39;password&#39;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&#39;db&#39;&lt;/span&gt;);
    }

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__wakeup&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;connect();
    }
}
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h3 id=&quot;vzees&quot;&gt;&lt;code&gt;__toString()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;对象当成字符串时的回应方法。例如使用&lt;code&gt;echo $obj;&lt;/code&gt;来输出一个对象&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-comment&quot;&gt;// Declare a simple class&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TestClass&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&#39;this is a object&#39;&lt;/span&gt;;
    }
}

$class = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; TestClass();
&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; $class;
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;这个方法只能返回字符串，而且不可以在这个方法中抛出异常，否则会出现致命错误。&lt;/p&gt;
&lt;h3 id=&quot;jhhyi&quot;&gt;&lt;code&gt;__invoke()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;调用函数的方式调用一个对象时的回应方法。如下&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CallableClass&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__invoke&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&#39;this is a object&#39;&lt;/span&gt;;
    }
}
$obj = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; CallableClass;
var_dump(is_callable($obj));
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h3 id=&quot;lsmir&quot;&gt;&lt;code&gt;__set_state()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;调用&lt;code&gt;var_export()&lt;/code&gt;导出类时，此静态方法会被调用。&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;A&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; $var1;
    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; $var2;

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__set_state&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;($an_array)&lt;/span&gt; &lt;/span&gt;{
        $obj = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; A;
        $obj-&amp;gt;var1 = $an_array[&lt;span class=&quot;hljs-string&quot;&gt;&#39;var1&#39;&lt;/span&gt;];
        $obj-&amp;gt;var2 = $an_array[&lt;span class=&quot;hljs-string&quot;&gt;&#39;var2&#39;&lt;/span&gt;];
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $obj;
    }
}

$a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; A;
$a-&amp;gt;var1 = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;
$a-&amp;gt;var2 = &lt;span class=&quot;hljs-string&quot;&gt;&#39;foo&#39;&lt;/span&gt;;
var_dump(var_export($a));
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h3 id=&quot;ycrcl&quot;&gt;&lt;code&gt;__clone()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;当对象复制完成时调用。例如在&lt;span class=&quot;wp_keywordlink&quot;&gt;&lt;a href=&quot;http://www.codeceo.com/article/category/develop/design-patterns&quot; title=&quot;设计模式&quot; target=&quot;_blank&quot;&gt;设计模式&lt;/a&gt;&lt;/span&gt;详解及PHP实现：单例模式一文中提到的单例模式实现方式，利用这个函数来防止对象被克隆。&lt;/p&gt;
&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Singleton&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; $_instance = &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;

    &lt;span class=&quot;hljs-comment&quot;&gt;// 私有构造方法 &lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{}

    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (is_null(&lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;::$_instance)) {
            &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;::$_instance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Singleton();
        }
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;self&lt;/span&gt;::$_instance;
    }

    &lt;span class=&quot;hljs-comment&quot;&gt;// 防止克隆实例&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__clone&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&#39;Clone is not allowed.&#39;&lt;/span&gt; . E_USER_ERROR);
    }
}
&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;h2 id=&quot;rfjwk&quot;&gt;魔术常量(Magic constants)&lt;/h2&gt;
&lt;p&gt;PHP中的常量大部分都是不变的，但是有8个常量会随着他们所在代码位置的变化而变化，这8个常量被称为魔术常量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__LINE__&lt;/code&gt;，文件中的当前行号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__FILE__&lt;/code&gt;，文件的完整路径和文件名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__DIR__&lt;/code&gt;，文件所在的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__FUNCTION__&lt;/code&gt;，函数名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__CLASS__&lt;/code&gt;，类的名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__TRAIT__&lt;/code&gt;，Trait的名字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__METHOD__&lt;/code&gt;，类的方法名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__NAMESPACE__&lt;/code&gt;，当前命名空间的名称&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些魔术常量常常被用于获得当前环境信息或者记录日志。&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</description>
                <link>/php/2016/03/14/PHP%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</link>
                <guid>/php/2016/03/14/PHP魔术方法</guid>
                <pubDate>Mon, 14 Mar 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>LNMP 开发环境搭建</title>
                <description>&lt;h1 id=&quot;nginx&quot;&gt;安装nginx&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noarch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RPMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;el7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ngx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;noarch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rpm&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ivh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;el7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ngx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;noarch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rpm&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#启动nginx&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#停止&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#重启&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#设置开机启动&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;nginx-lamplnmp&quot;&gt;更改nginx端口号（根据自己需求 例如：LAMP&amp;amp;&amp;amp;LNMP双环境同时存在）&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/etc/n&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ginx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vim&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;conf&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;把&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;改成&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;81&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#重启nginx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;访问http://ip:81即可看到nginx首页&lt;/p&gt;

&lt;h3 id=&quot;php-fpm&quot;&gt;安装php-fpm&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#启动php-fpm&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#设置开机启动&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;nginxphp&quot;&gt;更改nginx配置文件识别php&lt;/h3&gt;

&lt;p&gt;vi /etc/nginx/conf.d/default.conf，把之前的#给去掉就可以了，顺手改一下fastcgi_param&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fastcgi_pass&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fastcgi_index&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fastcgi_param&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;SCRIPT_FILENAME&lt;/span&gt;  &lt;span class=&quot;sr&quot;&gt;/usr/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$fastcgi_script_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;fastcgi_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section&quot;&gt;负载配置&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;upstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;172&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;138&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;172&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;139&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;#charset koi8-r;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#access_log  /var/log/nginx/log/host.access.log  main;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;   &lt;span class=&quot;sr&quot;&gt;/usr/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;htm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
                <link>/git/2016/03/08/lnmp%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA</link>
                <guid>/git/2016/03/08/lnmp环境搭建</guid>
                <pubDate>Tue, 08 Mar 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>javaScript面向对象编程</title>
                <description>&lt;p&gt;JavaScript的所有数据都可以看成对象，那是不是我们已经在使用面向对象编程了呢？&lt;/p&gt;
&lt;p&gt;当然不是。如果我们只使用&lt;code&gt;Number&lt;/code&gt;、&lt;code&gt;Array&lt;/code&gt;、&lt;code&gt;string&lt;/code&gt;以及基本的&lt;code&gt;{...}&lt;/code&gt;定义的对象，还无法发挥出面向对象编程的威力。&lt;/p&gt;
&lt;p&gt;JavaScript的面向对象编程和大多数其他语言如Java、C#的面向对象编程都不太一样。如果你熟悉Java或C#，很好，你一定明白面向对象的两个基本概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;类：类是对象的类型模板，例如，定义&lt;code&gt;Student&lt;/code&gt;类来表示学生，类本身是一种类型，&lt;code&gt;Student&lt;/code&gt;表示学生类型，但不表示任何具体的某个学生；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实例：实例是根据类创建的对象，例如，根据&lt;code&gt;Student&lt;/code&gt;类可以创建出&lt;code&gt;xiaoming&lt;/code&gt;、&lt;code&gt;xiaohong&lt;/code&gt;、&lt;code&gt;xiaojun&lt;/code&gt;等多个实例，每个实例表示一个具体的学生，他们全都属于&lt;code&gt;Student&lt;/code&gt;类型。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，类和实例是大多数面向对象编程语言的基本概念。&lt;/p&gt;
&lt;p&gt;不过，在JavaScript中，这个概念需要改一改。JavaScript不区分类和实例的概念，而是通过原型（prototype）来实现面向对象编程。&lt;/p&gt;
&lt;p&gt;原型是指当我们想要创建&lt;code&gt;xiaoming&lt;/code&gt;这个具体的学生时，我们并没有一个&lt;code&gt;Student&lt;/code&gt;类型可用。那怎么办？恰好有这么一个现成的对象：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var robot = {
    name: &amp;#39;Robot&amp;#39;,
    height: 1.6,
    run: function () {
        console.log(this.name + &amp;#39; is running...&amp;#39;);
    }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们看这个&lt;code&gt;robot&lt;/code&gt;对象有名字，有身高，还会跑，有点像小明，干脆就根据它来“创建”小明得了！&lt;/p&gt;
&lt;p&gt;于是我们把它改名为&lt;code&gt;Student&lt;/code&gt;，然后创建出&lt;code&gt;xiaoming&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var Student = {
    name: &amp;#39;Robot&amp;#39;,
    height: 1.2,
    run: function () {
        console.log(this.name + &amp;#39; is running...&amp;#39;);
    }
};

var xiaoming = {
    name: &amp;#39;小明&amp;#39;
};

xiaoming.__proto__ = Student;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意最后一行代码把&lt;code&gt;xiaoming&lt;/code&gt;的原型指向了对象&lt;code&gt;Student&lt;/code&gt;，看上去&lt;code&gt;xiaoming&lt;/code&gt;仿佛是从&lt;code&gt;Student&lt;/code&gt;继承下来的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xiaoming.name; // &amp;#39;小明&amp;#39;
xiaoming.run(); // 小明 is running...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;xiaoming&lt;/code&gt;有自己的&lt;code&gt;name&lt;/code&gt;属性，但并没有定义&lt;code&gt;run()&lt;/code&gt;方法。不过，由于小明是从&lt;code&gt;Student&lt;/code&gt;继承而来，只要&lt;code&gt;Student&lt;/code&gt;有&lt;code&gt;run()&lt;/code&gt;方法，&lt;code&gt;xiaoming&lt;/code&gt;也可以调用：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/files/attachments/001435287613668a73ab76ccc85411282c1b1370be41636000/l&quot; alt=&quot;xiaoming-prototype&quot; /&gt;&lt;/p&gt;
&lt;p&gt;JavaScript的原型链和Java的Class区别就在，它没有“Class”的概念，所有对象都是实例，所谓继承关系不过是把一个对象的原型指向另一个对象而已。&lt;/p&gt;
&lt;p&gt;如果你把&lt;code&gt;xiaoming&lt;/code&gt;的原型指向其他对象：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var Bird = {
    fly: function () {
        console.log(this.name + &amp;#39; is flying...&amp;#39;);
    }
};

xiaoming.__proto__ = Bird;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在&lt;code&gt;xiaoming&lt;/code&gt;已经无法&lt;code&gt;run()&lt;/code&gt;了，他已经变成了一只鸟：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xiaoming.fly(); // 小明 is flying...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在JavaScrip代码运行时期，你可以把&lt;code&gt;xiaoming&lt;/code&gt;从&lt;code&gt;Student&lt;/code&gt;变成&lt;code&gt;Bird&lt;/code&gt;，或者变成任何对象。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;请注意&lt;/em&gt;，上述代码仅用于演示目的。在编写JavaScript代码时，不要直接用&lt;code&gt;obj.__proto__&lt;/code&gt;去改变一个对象的原型，并且，低版本的IE也无法使用&lt;code&gt;__proto__&lt;/code&gt;。&lt;code&gt;Object.create()&lt;/code&gt;方法可以传入一个原型对象，并创建一个基于该原型的新对象，但是新对象什么属性都没有，因此，我们可以编写一个函数来创建&lt;code&gt;xiaoming&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 原型对象:
var Student = {
    name: &amp;#39;Robot&amp;#39;,
    height: 1.2,
    run: function () {
        console.log(this.name + &amp;#39; is running...&amp;#39;);
    }
};

function createStudent(name) {
    // 基于Student原型创建一个新对象:
    var s = Object.create(Student);
    // 初始化新对象:
    s.name = name;
    return s;
}

var xiaoming = createStudent(&amp;#39;小明&amp;#39;);
xiaoming.run(); // 小明 is running...
xiaoming.__proto__ === Student; // true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这是创建原型继承的一种方法，JavaScript还有其他方法来创建对象，我们在后面会一一讲到。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
                <link>/javascript/2016/02/22/javaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B</link>
                <guid>/javascript/2016/02/22/javaScript面向对象编程</guid>
                <pubDate>Mon, 22 Feb 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>正则表达式</title>
                <description>&lt;p class=&quot;p0&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;1.1 什么是正则表达式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;正则表达式是一种特殊的字符串模式，用于匹配一组字符串，就好比用模具做产品，而正则就是这个模具，定义一种规则去匹配符合规则的字符。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;1.2 常用的正则匹配工具&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;在线匹配工具：&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　1&amp;nbsp;http://www.regexpal.com/&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2 http://rubular.com/&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;正则匹配软件&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&amp;nbsp;&lt;a href=&quot;http://pan.baidu.com/s/19Yn49&quot;&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;McTracer&lt;/span&gt;&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 用过几个之后还是觉得这个是最好用的，支持将正则导成对应的语言如java C# js等还帮你转义了，Copy直接用就行了很方便，另外支持把正则表达式用法解释，如哪一段是捕获分组，哪段是贪婪匹配等等，总之用起来 So Happy .&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;二 正则字符简单介绍&lt;/h3&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;2.1 元字符介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;^&quot;&lt;/strong&gt; ：^会匹配行或者字符串的起始位置，有时还会匹配整个文档的起始位置。&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;$&quot;&lt;/strong&gt; &amp;nbsp;：$会匹配行或字符串的结尾&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; 如图&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;而且被匹配的字符必须是以This开头有空格也不行，必须以Regex结尾，也不能有空格与其它字符&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/366784/201311/23112422-56df0ef3f54c42abb55e7cabd5278824.png&quot; alt=&quot;&quot; /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;img src=&quot;http://images.cnitblog.com/blog/366784/201311/23112601-f5e9f5c0ddd7417eb28ac7d0734f8b8f.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;strong&gt;&quot;\b&quot;&lt;/strong&gt; :不会消耗任何字符只匹配一个位置，常用于匹配单词边界 如 我想从字符串中&quot;This is Regex&quot;匹配单独的单词 &quot;is&quot; 正则就要写成 &quot;\bis\b&quot; &amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp;\b 不会匹配is 两边的字符，但它会识别is 两边是否为单词的边界&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;strong&gt;&quot;\d&quot;&lt;/strong&gt;: 匹配数字，&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp;例如要匹配一个固定格式的电话号码以0开头前4位后7位，如0737-5686123 &amp;nbsp;正则:^0\d\d\d-\d\d\d\d\d\d\d$ 这里只是为了介绍&quot;\d&quot;字符，实际上有更好的写法会在 &amp;nbsp; &amp;nbsp; 下面介绍。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;strong&gt;&quot;\w&quot;&lt;/strong&gt;：&lt;span&gt;匹配字母，数字，下划线.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;　　 &amp;nbsp;例如我要匹配&quot;a2345BCD__TTz&quot; 正则：&quot;\w+&quot; &amp;nbsp;这里的&quot;+&quot;字符为一个量词指重复的次数，稍后会详细介绍。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;strong&gt;&quot;\s&quot;&lt;/strong&gt;：匹配空格&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp;例如字符 &quot;a b c&quot; 正则：&quot;\w\s\w\s\w&quot; &amp;nbsp;一个字符后跟一个空格，如有字符间有多个空格直接把&quot;\s&quot; 写成 &quot;\s+&quot; 让空格重复&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;strong&gt; &quot;.&quot;&lt;/strong&gt;：&lt;span&gt;匹配除了换行符以外的任何字符 &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;　　 &amp;nbsp;这个算是&quot;\w&quot;的加强版了&quot;\w&quot;不能匹配 空格 如果把字符串加上空格用&quot;\w&quot;就受限了，看下用 &quot;.&quot;是如何匹配字符&quot;a23 4 5 B C D__TTz&quot; &amp;nbsp;正则：&quot;.+&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&amp;nbsp; &lt;strong&gt;&quot;[abc]&quot;&lt;/strong&gt;: 字符组 &amp;nbsp;匹配包含括号内元素的字符&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 这个比较简单了只匹配括号内存在的字符，还可以写成[a-z]匹配a至z的所以字母就等于可以用来控制只能输入英文了，&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;2.2 几种反义&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;　　写法很简单改成大写就行了，意思与原来的相反，这里就不举例子了&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;\W&quot;&lt;/strong&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;匹配任意不是字母，数字，下划线 的字符&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;\S&quot;&lt;/strong&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;匹配任意不是空白符的字符&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;　&quot;\D&quot;&lt;/strong&gt; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;匹配任意非数字的字符&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &lt;strong&gt;&amp;nbsp;&quot;\B&quot;&lt;/strong&gt; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;匹配不是单词开头或结束的位置&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;[^abc]&quot;&lt;/strong&gt; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;匹配除了abc以外的任意字符&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;2.3 &amp;nbsp;量词&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　先解释关于量词所涉及到的重要的三个概念&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; 贪婪(贪心) 如&quot;*&quot;字符 贪婪量词会首先匹配整个字符串，尝试匹配时，它会选定尽可能多的内容，如果 失败则回退一个字符，然后再次尝试回退的过程就叫做回溯，它会每次回退一个字符，直到找到匹配的内容或者没有字符可以回退。相比下面两种贪婪量词对资源的消耗是最大的，&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp;懒惰(勉强) 如 &quot;?&quot; &amp;nbsp;懒惰量词使用另一种方式匹配，它从目标的起始位置开始尝试匹配，每次检查一个字符，并寻找它要匹配的内容，如此循环直到字符结尾处。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp;占有 &amp;nbsp;如&quot;+&quot; 占有量词会覆盖事个目标字符串，然后尝试寻找匹配内容 ，但它只尝试一次，不会回溯，就好比先抓一把石头，然后从石头中挑出黄金&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;&amp;nbsp;&quot;*&quot;(贪婪)&lt;/strong&gt; &amp;nbsp;&amp;nbsp;重复零次或更多&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　　 &amp;nbsp;例如&quot;aaaaaaaa&quot; 匹配字符串中所有的a &amp;nbsp;正则： &quot;a*&quot; &amp;nbsp; 会出到所有的字符&quot;a&quot;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;+&quot;(懒惰)&lt;/strong&gt; &amp;nbsp;&amp;nbsp;重复一次或更多次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp; 例如&quot;aaaaaaaa&quot;&amp;nbsp;匹配字符串中所有的a &amp;nbsp;正则： &quot;a+&quot; &amp;nbsp;会取到字符中所有的a字符， &amp;nbsp;&quot;a+&quot;与&quot;a*&quot;不同在于&quot;+&quot;至少是一次而&quot;*&quot; 可以是0次，&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp; 稍后会与&quot;?&quot;字符结合来体现这种区别&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;?&quot;(占有)&lt;/strong&gt; &amp;nbsp;&amp;nbsp;重复零次或一次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp; 例如&quot;aaaaaaaa&quot;&amp;nbsp;匹配字符串中的a 正则 ：&amp;nbsp;&quot;a?&quot; 只会匹配一次，也就是结果只是单个字符a&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　 &amp;nbsp;&lt;strong&gt;&quot;{n}&quot;&lt;/strong&gt; &amp;nbsp;重复n次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp; 例如从&quot;aaaaaaaa&quot;&amp;nbsp;匹配字符串的a 并重复3次 正则： &amp;nbsp;&quot;a{3}&quot; &amp;nbsp;结果就是取到3个a字符 &amp;nbsp;&quot;aaa&quot;;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　 &amp;nbsp;&lt;strong&gt;&quot;{n,m}&quot;&lt;/strong&gt; &amp;nbsp;重复n到m次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp; 例如正则 &quot;a{3,4}&quot; 将a重复匹配3次或者4次 所以供匹配的字符可以是三个&quot;aaa&quot;也可以是四个&quot;aaaa&quot; 正则都可以匹配到&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;&quot;{n,}&quot;&lt;/strong&gt; &amp;nbsp;重复n次或更多次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;　　 &amp;nbsp; &amp;nbsp;与{n,m}不同之处就在于匹配的次数将没有上限，但至少要重复n次 如 正则&quot;a{3,}&quot; a至少要重复3次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;把量词了解了之后之前匹配电话号码的正则现在就可以改得简单点了^0\d\d\d-\d\d\d\d\d\d\d&lt;span class=&quot;MathJax_Preview&quot; style=&quot;color: inherit;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;MathJax&quot; id=&quot;MathJax-Element-1-Frame&quot; tabindex=&quot;0&quot; style=&quot;position: relative;&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x53EF;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x4EE5;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x6539;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x4E3A;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;quot;&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;0&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;mtext mathcolor=&amp;quot;red&amp;quot;&amp;gt;\d&amp;lt;/mtext&amp;gt;&amp;lt;mo&amp;gt;+&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;mtext mathcolor=&amp;quot;red&amp;quot;&amp;gt;\d&amp;lt;/mtext&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mn&amp;gt;7&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/math&amp;gt;&quot; role=&quot;presentation&quot;&gt;&lt;nobr aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;math&quot; id=&quot;MathJax-Span-1&quot; role=&quot;math&quot; style=&quot;width: 11.481em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 9.169em; height: 0px; font-size: 125%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.135em, 1009.15em, 2.588em, -1000em); top: -2.154em; left: 0em;&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-2&quot;&gt;&lt;span class=&quot;texatom&quot; id=&quot;MathJax-Span-3&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-4&quot;&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-5&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral,&amp;quot;Arial Unicode MS&amp;quot;,serif; font-size: 80%; font-style: normal; font-weight: normal;&quot;&gt;可&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;texatom&quot; id=&quot;MathJax-Span-6&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-7&quot;&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-8&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral,&amp;quot;Arial Unicode MS&amp;quot;,serif; font-size: 80%; font-style: normal; font-weight: normal;&quot;&gt;以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;texatom&quot; id=&quot;MathJax-Span-9&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-10&quot;&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-11&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral,&amp;quot;Arial Unicode MS&amp;quot;,serif; font-size: 80%; font-style: normal; font-weight: normal;&quot;&gt;改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;texatom&quot; id=&quot;MathJax-Span-12&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-13&quot;&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-14&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral,&amp;quot;Arial Unicode MS&amp;quot;,serif; font-size: 80%; font-style: normal; font-weight: normal;&quot;&gt;为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;msubsup&quot; id=&quot;MathJax-Span-15&quot; style=&quot;padding-left: 0.278em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.929em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(3.121em, 1000.37em, 3.806em, -1000em); top: -4em; left: 0em;&quot;&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-16&quot; style=&quot;font-family: MathJax_Main;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -4.363em; left: 0.5em;&quot;&gt;&lt;span class=&quot;mn&quot; id=&quot;MathJax-Span-17&quot; style=&quot;font-size: 70.7%; font-family: MathJax_Main;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mtext&quot; id=&quot;MathJax-Span-18&quot; style=&quot;font-family: MathJax_Main; padding-left: 0.278em; color: red;&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-19&quot; style=&quot;font-family: MathJax_Main; padding-left: 0.222em;&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-20&quot; style=&quot;font-family: MathJax_Main; padding-left: 0.222em;&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mtext&quot; id=&quot;MathJax-Span-21&quot; style=&quot;font-family: MathJax_Main; color: red;&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;texatom&quot; id=&quot;MathJax-Span-22&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-23&quot;&gt;&lt;span class=&quot;mn&quot; id=&quot;MathJax-Span-24&quot; style=&quot;font-family: MathJax_Main;&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.154em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; overflow: hidden; vertical-align: -0.389em; border-left: 0px solid; width: 0px; height: 1.509em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;span id=&quot;transmark&quot; style=&quot;display: none; width: 0px; height: 0px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot; role=&quot;presentation&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;可&lt;/mo&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;以&lt;/mo&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;改&lt;/mo&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;为&lt;/mo&gt;&lt;/mrow&gt;&lt;msup&gt;&lt;mo&gt;&quot;&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;mtext mathcolor=&quot;red&quot;&gt;\d&lt;/mtext&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mtext mathcolor=&quot;red&quot;&gt;\d&lt;/mtext&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;7&lt;/mn&gt;&lt;/mrow&gt;&lt;/math&gt;&lt;/span&gt;&lt;/span&gt;&lt;script type=&quot;math/tex&quot; id=&quot;MathJax-Element-1&quot;&gt; 可以改为&quot;^0\d+-\d{7}&lt;/script&gt;&quot;。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;这样写还不够完美如果因为前面的区号没有做限定，以至于可以输入很多们，而通常只能是3位或者4位，&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;现在再改一下 &quot;^0\d{2,3}-\d{7}&quot;如此一来区号部分就可以匹配3位或者4位的了&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&amp;nbsp;2.4 懒惰限定符&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　&lt;strong&gt;&quot;*?&quot;&lt;/strong&gt; &amp;nbsp;&amp;nbsp;重复任意次，但尽可能少重复&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp;如 &quot;acbacb&quot; &amp;nbsp;正则 &amp;nbsp;&quot;a.*?b&quot; 只会取到第一个&quot;acb&quot; 原本可以全部取到但加了限定符后，只会匹配尽可能少的字符 ，而&quot;acbacb&quot;最少字符的结果就是&quot;acb&quot;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　&lt;strong&gt;&quot;+?&quot;&lt;/strong&gt; &amp;nbsp;重复1次或更多次，但尽可能少重复&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; 与上面一样，只是至少要重复1次&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　&lt;strong&gt;&quot;??&quot;&lt;/strong&gt; &amp;nbsp;重复0次或1次，但尽可能少重复&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　 &amp;nbsp; &amp;nbsp;如 &quot;aaacb&quot; 正则 &quot;a.??b&quot; 只会取到最后的三个字符&quot;acb&quot;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　&lt;strong&gt;&quot;{n,m}?&quot;&lt;/strong&gt; &amp;nbsp;重复n到m次，但尽可能少重复&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 如 &quot;aaaaaaaa&quot; &amp;nbsp;正则 &quot;a{0,m}&quot; 因为最少是0次所以取到结果为空&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　&lt;strong&gt;&quot;{n,}?&quot; &amp;nbsp;&lt;/strong&gt; &amp;nbsp;重复n次以上，但尽可能少重复&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 如 &quot;aaaaaaa&quot; &amp;nbsp;正则 &quot;a{1,}&quot; 最少是1次所以取到结果为 &quot;a&quot;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;三 &amp;nbsp;正则进阶&lt;/h3&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt; &amp;nbsp;3.1 捕获分组&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;　　先了解在正则中捕获分组的概念，其实就是一个括号内的内容 如 &quot;(\d)\d&quot; 而&quot;(\d)&quot; 这就是一个捕获分组，可以对捕获分组进行 后向引用 (如果后而有相同的内容则可以直接引用前面定义的捕获组，以简化表达式) 如(\d)\d\1 这里的&quot;\1&quot;就是对&quot;(\d)&quot;的后向引用&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;那捕获分组有什么用呢看个例子就知道了&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;如 &amp;nbsp;&quot;zery zery&quot; 正则 \b(\w+)\b\s\1\b 所以这里的&quot;\1&quot;所捕获到的字符也是 与(\w+)一样的&quot;zery&quot;，为了让组名更有意义，组名是可以自定义名字的&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&quot;\b(?&amp;lt;name&amp;gt;\w+)\b\s\k&amp;lt;name&amp;gt;\b&quot; 用&quot;?&amp;lt;name&amp;gt;&quot;就可以自定义组名了而要后向引用组时要记得写成 &quot;\k&amp;lt;name&amp;gt;&quot;;自定义组名后,捕获组中匹配到的值就会保存在定义的组名里&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;下面列出捕获分组常有的用法&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;strong&gt;&quot;(exp)&quot;&lt;/strong&gt; &amp;nbsp; &amp;nbsp;&lt;span&gt;匹配exp,并捕获文本到自动命名的组里&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;strong&gt;&quot;(?&amp;lt;name&amp;gt;exp)&quot;&lt;/strong&gt; &amp;nbsp;&amp;nbsp;&lt;span&gt;匹配exp,并捕获文本到名称为name的组里&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;strong&gt;&quot;(?:exp)&quot;&lt;/strong&gt; &amp;nbsp;&lt;span&gt;匹配exp,不捕获匹配的文本，也不给此分组分配组号&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;以下为零宽断言&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;strong&gt;&quot;(?=exp)&quot;&lt;/strong&gt; &amp;nbsp;&lt;span&gt;匹配exp前面的位置&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;　　如 &quot;How are you doing&quot; 正则&quot;(?&amp;lt;txt&amp;gt;.+(?=ing))&quot; 这里取ing前所有的字符，并定义了一个捕获分组名字为 &quot;txt&quot; 而&quot;txt&quot;这个组里的值为&quot;How are you do&quot;;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;strong&gt;&quot;(?&amp;lt;=exp)&quot;&lt;/strong&gt; &amp;nbsp;&lt;span&gt;匹配exp后面的位置&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;　　如 &quot;How are you doing&quot; 正则&quot;(?&amp;lt;txt&amp;gt;(?&amp;lt;=How).+)&quot; 这里取&quot;How&quot;之后所有的字符，并定义了一个捕获分组名字为 &quot;txt&quot; 而&quot;txt&quot;这个组里的值为&quot;&amp;nbsp;are you doing&quot;;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&quot;(?!exp)&quot;&lt;/strong&gt; &amp;nbsp;&lt;span&gt;匹配后面跟的不是exp的位置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　如 &quot;123abc&quot; 正则 &quot;\d{3}(?!\d)&quot;匹配3位数字后非数字的结果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&quot;(?&amp;lt;!exp)&quot;&lt;/strong&gt; &amp;nbsp;&lt;span&gt;匹配前面不是exp的位置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　如 &quot;abc123 &quot; 正则 &quot;(?&amp;lt;![0-9])123&quot; 匹配&quot;123&quot;前面是非数字的结果也可写成&quot;(?!&amp;lt;\d)123&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;四 &amp;nbsp;正则实战&lt;/h3&gt;
&lt;p class=&quot;p0&quot;&gt;　　正则在做验证，与数据过滤时体现的威力是巨大的，我想用过的朋友都知道，下面我们把刚刚了解的全部结合起来做一次实战 做数据采集用正则过滤Html标签并取相应的数据&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;我们的战场就选在博客园吧，假设现在要采集博客园首页的所有文章信息 包括文章标题，链接接 作者博客地址，文章简介，文章发布时间，阅读数据，评论数 ，推荐数。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;先看博客园文章的Html格式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;copyCnblogsCode(this)&quot; title=&quot;复制代码&quot;&gt;&lt;img src=&quot;//common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
 &lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot; onclick=&quot;copyCnblogsCode(this)&quot; href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
 &lt;pre&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;post_item&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;digg&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;diggit&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; onclick&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;DiggIt(3439076,120879,1)&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;span &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;diggnum&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; id&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;digg_count_3439076&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;4&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;span&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;clear&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;digg_tip_3439076&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;digg_tip&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;post_item_body&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;h3&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;titlelnk&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; href&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;http://www.cnblogs.com/swq6413/p/3439076.html&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; target&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;分享完整的项目工程目录结构&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;h3&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;p &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;post_item_summary&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;http://www.cnblogs.com/swq6413/&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; target&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;img &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;48&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; height&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;48&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;pfs&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; src&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;http://pic.cnitblog.com/face/142964/20131116170946.png&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; alt&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;    在项目开发过程中，如何有序的保存项目中的各类数据文件，建立一个分类清晰、方便管理的目录结构是非常重要的。 综合以前的项目和一些朋友的项目结构，我整理了一份我觉得还不错的项目目录结构。 在这里分享给大家，欢迎各位提出你宝贵的意见和建议。如果喜欢请“推荐”则个，感激万分！！ 整个目录设置到4级子目录，实...
     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;post_item_foot&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;http://www.cnblogs.com/swq6413/&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;lightblue&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;七少爷&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;
     发布于 2013-11-23 15:48
     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;span &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;article_comment&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;http://www.cnblogs.com/swq6413/p/3439076.html#commentform&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; title&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;2013-11-23 16:40&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;gray&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;
         评论(4)&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;span&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;span &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;article_view&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;http://www.cnblogs.com/swq6413/p/3439076.html&quot;&lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;gray&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;阅读(206)&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;span&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;=&quot;clear&quot;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;
 &lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot; onclick=&quot;copyCnblogsCode(this)&quot; href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
 &lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;copyCnblogsCode(this)&quot; title=&quot;复制代码&quot;&gt;&lt;img src=&quot;//common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;通过构造一个Http请求来取到数据并对数据进行相应处理得到关键信息，在过滤Html标签取文章时正则的强大的威力就体现出来了，&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;正则的知识点也都基本用上了比如 &quot;\s \w+ . * ? &quot;还有捕获分组，零宽断言等等。喜欢的朋友可以试一试，然后自己看如何通过正则取相应数据的，代码中的正则都是很基本简单的，其意思与用法都在上文中详细写了。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;copyCnblogsCode(this)&quot; title=&quot;复制代码&quot;&gt;&lt;img src=&quot;//common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
 &lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot; onclick=&quot;copyCnblogsCode(this)&quot; href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
 &lt;pre&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Program
     {
         &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt; Main(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[] args)
         {

             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; content =&lt;span style=&quot;color: #000000;&quot;&gt; HttpUtility.HttpGetHtml();
             HttpUtility.GetArticles(content);
         }
     }

     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;internal&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; HttpUtility
     {
         &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认获取第一页数据&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; HttpGetHtml()
         {
             HttpWebRequest request &lt;/span&gt;= (HttpWebRequest)WebRequest.Create(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;http://www.cnblogs.com/&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
             request.Accept &lt;/span&gt;= &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text/plain, */*; q=0.01&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
             request.Method &lt;/span&gt;= &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;GET&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
             request.Headers.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Accept-Language&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
             request.ContentLength &lt;/span&gt;= &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
            &lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;
             request.Host &lt;/span&gt;= &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;www.cnblogs.com&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
             request.UserAgent &lt;/span&gt;= &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Maxthon/4.1.3.5000 Chrome/26.0.1410.43 Safari/537.1&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
             HttpWebResponse response &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; (HttpWebResponse)request.GetResponse();
             Stream responStream &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; response.GetResponseStream();
             StreamReader reader &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; StreamReader(responStream, Encoding.UTF8);
             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; content =&lt;span style=&quot;color: #000000;&quot;&gt; reader.ReadToEnd();
             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; content;

         }

         &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; List&amp;lt;Article&amp;gt; GetArticles(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; htmlString)
         {
             List&lt;/span&gt;&amp;lt;Article&amp;gt; articleList = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; List&amp;lt;Article&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();
             Regex regex &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
             Article article &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
             regex &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;div class=\&quot;post_item\&quot;&amp;gt;(?&amp;lt;content&amp;gt;.*?)(?=&amp;lt;div class=\&quot;clear\&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; + &lt;span style=&quot;color: #800000;&quot;&gt;@&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;/div&amp;gt;\s*&amp;lt;/div&amp;gt;)&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,
                               RegexOptions.Singleline);

             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (regex.IsMatch(htmlString))
             {
                 MatchCollection aritcles &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; regex.Matches(htmlString);

                 &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (Match item &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; aritcles)
                 {
                     article &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Article();
                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取推荐&lt;/span&gt;
                     regex =
                         &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Regex(
                             &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;div class=\&quot;digg\&quot;&amp;gt;.*&amp;lt;span.*&amp;gt;(?&amp;lt;digNum&amp;gt;.*)&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; + &lt;span style=&quot;color: #800000;&quot;&gt;@&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; +
                             &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;.*&amp;lt;div class=\&quot;post_item_body\&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     article.DiggNum &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;digNum&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;

                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取文章标题 需要去除转义字符&lt;/span&gt;
                     regex = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;h3&amp;gt;(?&amp;lt;a&amp;gt;.*)&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; a = regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;
                     regex &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;a\\s.*href=\&quot;(?&amp;lt;href&amp;gt;.*?)\&quot;.*&amp;gt;(?&amp;lt;summary&amp;gt;.*)&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     article.AritcleUrl &lt;/span&gt;= regex.Match(a).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;
                     article.AritcleTitle &lt;/span&gt;= regex.Match(a).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;summary&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;

                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取作者图片 &lt;/span&gt;
                     regex = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;a.*&amp;gt;(?&amp;lt;img&amp;gt;&amp;lt;img[^&amp;gt;].*&amp;gt;)&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     article.AuthorImg &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;img&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;

                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取作者博客URL及链接的target属性&lt;/span&gt;
                     regex = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;a\\s*?href=\&quot;(?&amp;lt;href&amp;gt;.*)\&quot;\\s*?target=\&quot;(?&amp;lt;target&amp;gt;.*?)\&quot;&amp;gt;.*&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,
                                       RegexOptions.Singleline);
                     article.AuthorUrl &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;
                     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; urlTarget = regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;target&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;

                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取文章简介
                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;1 先取summary Div中所有内容&lt;/span&gt;
                     regex = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;p class=\&quot;post_item_summary\&quot;&amp;gt;(?&amp;lt;summary&amp;gt;.*)&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; summary = regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;summary&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;
                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;2 取简介&lt;/span&gt;
                     regex = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;(?&amp;lt;indroduct&amp;gt;(?&amp;lt;=&amp;lt;/a&amp;gt;).*)&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     article.AritcleInto &lt;/span&gt;= regex.Match(summary).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;indroduct&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;


                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取发布人与发布时间&lt;/span&gt;
                     regex =
                         &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Regex(
                             &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;div class=\&quot;post_item_foot\&quot;&amp;gt;\\s*&amp;lt;a.*?&amp;gt;(?&amp;lt;publishName&amp;gt;.*)&amp;lt;/a&amp;gt;(?&amp;lt;publishTime&amp;gt;.*)&amp;lt;span class=\&quot;article_comment\&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,
                             RegexOptions.Singleline);
                     article.Author &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;publishName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;
                     article.PublishTime &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;publishTime&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value.Trim();

                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取评论数&lt;/span&gt;
                     regex =
                         &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Regex(
                             &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;span class=\&quot;article_comment\&quot;&amp;gt;&amp;lt;a.*&amp;gt;(?&amp;lt;comment&amp;gt;.*)&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=\&quot;article_view\&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,
                             RegexOptions.Singleline);
                     article.CommentNum &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;comment&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;

                     &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;取阅读数&lt;/span&gt;
                     regex = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Regex(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;lt;span\\s*class=\&quot;article_view\&quot;&amp;gt;&amp;lt;a.*&amp;gt;(?&amp;lt;readNum&amp;gt;.*)&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.Singleline);
                     article.ReadNum &lt;/span&gt;= regex.Match(item.Value).Groups[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;readNum&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;].Value;
                     articleList.Add(article);
                 }

             }
             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; articleList;
         }



         &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; ClearSpecialTag(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; htmlString)
         {

             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; htmlStr = Regex.Replace(htmlString, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.IgnoreCase);
             htmlStr &lt;/span&gt;= Regex.Replace(htmlStr, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;\t&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.IgnoreCase);
             htmlStr &lt;/span&gt;= Regex.Replace(htmlStr, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;\r&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.IgnoreCase);
             htmlStr &lt;/span&gt;= Regex.Replace(htmlStr, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;\&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, RegexOptions.IgnoreCase);
             &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; htmlStr;
         }
     }

     &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Article
     {
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 文章标题
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; AritcleTitle { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 文章链接
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; AritcleUrl { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 文章简介
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; AritcleInto { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 作者名
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; Author { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 作者地址
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; AuthorUrl { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 作者图片
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; AuthorImg { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 发布时间
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; PublishTime { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 推荐数
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; DiggNum { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }

         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 评论数
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; CommentNum { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 阅读数
         &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
         &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; ReadNum { &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; }

     }&lt;/span&gt;&lt;/pre&gt;
 &lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot; onclick=&quot;copyCnblogsCode(this)&quot; href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
 &lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a href=&quot;javascript:void(0);&quot; onclick=&quot;copyCnblogsCode(this)&quot; title=&quot;复制代码&quot;&gt;&lt;img src=&quot;//common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;正则部分可能写得不很完美，但至少也匹配出来了，另外因为自己也是刚接触正则，也只能写出这种比较简单的正则。还望大家海涵~~&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;五 &amp;nbsp; &amp;nbsp;总结&lt;/h3&gt;
&lt;p class=&quot;p0&quot;&gt;　　正则其实并不难，了解每个符号的意思后，自己马上动手试一试多写几次自然就明白了，正则是出了名的坑多，随便少写了个点就匹配不到数据了，我也踩了很多坑，踩着踩着就踩出经验了。&lt;/p&gt;
&lt;p class=&quot;p0&quot;&gt;本文也只是对正则做了很基本的介绍，还有很多正则的字符没有介绍，只是写了比较常用的一些。&lt;/p&gt;
&lt;p&gt;&amp;lt;/div&amp;gtamp;lt;p class=&quot;p0&quot;&amp;gt;这样写还不够完美如果因为前面的区号没有做限定，以至于可以输入很多们，而通常只能是3位或者4位，&amp;lt;/p&amp;lt;p class=&quot;p0&quot;&amp;gt;本文也只是对正则做了很基本的介绍，还有很多正则的字符没有介绍，只是写了比较常用的一些。&lt;/p&gt;
</description>
                <link>/javascript/2016/02/16/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F</link>
                <guid>/javascript/2016/02/16/正则表达式</guid>
                <pubDate>Tue, 16 Feb 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>JavaScript</title>
                <description>&lt;h3&gt;javascript简介&lt;/h3&gt;

&lt;p&gt;JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，
广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。在1995年时，由Netscape公司
的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。
但实际上它的语法风格与Self及Scheme较为接近。为了取得技术优势，微软推出了JScript，CEnvi推出ScriptEase，与JavaScript同样可在浏览器上运行。
为了统一规格，因为JavaScript兼容于ECMA标准，因此也称为ECMAScript。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;基本特点&lt;/p&gt;

    &lt;p&gt;JavaScript是一种属于网络的脚本语言,已经被广泛用于Web应用开发,常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。通常JavaScript脚本是通过嵌入在HTML中来实现自身的功能的。
  1.是一种解释性脚本语言（代码不进行预编译）。
  2.主要用来向HTML（标准通用标记语言下的一个应用）页面添加交互行为。
  3.可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。
  4.跨平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行（如Windows、Linux、Mac、Android、iOS等）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;日常用途&lt;/p&gt;

    &lt;p&gt;1.嵌入动态文本于HTML页面。
  2.对浏览器事件做出响应。
  3.读写HTML元素。
  4.在数据被提交到服务器之前验证数据。
  5.检测访客的浏览器信息。
  6.控制cookies，包括创建和修改等。
  7.基于Node.js技术进行服务器端编程。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;javascript-1&quot;&gt;javascript语法&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;运算符：有7类运算符，分别为：
    &lt;ul&gt;
      &lt;li&gt;赋值运算符（=，+=，-=，*=，/=，%=，«=,»=,&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;=,&amp;amp;=);&lt;/li&gt;
      &lt;li&gt;算术运算符（+, -,*,/,%,++,–);&lt;/li&gt;
      &lt;li&gt;比较运算符（&amp;gt;,&amp;lt;,&amp;lt;=,&amp;gt;=,=,!=);&lt;/li&gt;
      &lt;li&gt;逻辑运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;,&amp;amp;&amp;amp;,!);&lt;/li&gt;
      &lt;li&gt;条件运算符（?:);&lt;/li&gt;
      &lt;li&gt;位运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;, &amp;amp; , « ,»,~,^);&lt;/li&gt;
      &lt;li&gt;字符串运算符（+).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;表达式：有4类表达式，分别为：
    &lt;ul&gt;
      &lt;li&gt;赋值表达式，&lt;/li&gt;
      &lt;li&gt;算术表达式，&lt;/li&gt;
      &lt;li&gt;布尔表达式，&lt;/li&gt;
      &lt;li&gt;字符串表达式。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;变量：变量有以下类型：
    &lt;ul&gt;
      &lt;li&gt;object(对象）,&lt;/li&gt;
      &lt;li&gt;array(数组）,&lt;/li&gt;
      &lt;li&gt;number(数），&lt;/li&gt;
      &lt;li&gt;boolean(布尔值）,&lt;/li&gt;
      &lt;li&gt;null(空值)，&lt;/li&gt;
      &lt;li&gt;undefined(没有定义和赋值的变量），&lt;/li&gt;
      &lt;li&gt;string(字符串）。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;变量定义用var关键字。&lt;/p&gt;

&lt;h3 id=&quot;javascript-2&quot;&gt;javascript使用方法&lt;/h3&gt;

&lt;p&gt;通过&lt;script&gt;&lt;/script&gt;可以装饰js脚本嵌入到网页中，如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;script language=&quot;javascript&quot;&amp;gt;
 document.write(&quot;这是JavaScript&quot;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
                <link>/js/2016/02/11/JavaScript</link>
                <guid>/js/2016/02/11/JavaScript</guid>
                <pubDate>Thu, 11 Feb 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>javascript ajax</title>
                <description>&lt;h3 id=&quot;javascript-ajax&quot;&gt;javascript ajax&lt;/h3&gt;

&lt;h2 id=&quot;ajax&quot;&gt;什么是AJAX&lt;/h2&gt;

&lt;p&gt;AJAX即“Asynchronous Javascript And XML”（异步JavaScript和XML），是指一种创建交互式网页应用的网页开发技术。
AJAX = 异步 JavaScript和XML（标准通用标记语言的子集）。
AJAX 是一种用于创建快速动态网页的技术。
通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。
传统的网页（不使用 AJAX）如果需要更新内容，必须重载整个网页页面。&lt;/p&gt;

&lt;h2 id=&quot;ajax-1&quot;&gt;AJAX优势&lt;/h2&gt;

&lt;p&gt;AJAX不是一种新的编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术。
使用Javascript向服务器提出请求并处理响应而不阻塞用户！核心对象XMLHTTPRequest。通过这个对象，您的 JavaScript 可在不重载页面的情况与Web服务器交换数据，即在不需要刷新页面的情况下，就可以产生局部刷新的效果。
AJAX 在浏览器与 Web 服务器之间使用异步数据传输（HTTP 请求），这样就可使网页从服务器请求少量的信息，而不是整个页面。
AJAX 可使因特网应用程序更小、更快，更友好。
AJAX 是一种独立于 Web 服务器软件的浏览器技术。　AJAX 基于下列 Web 标准：
JavaScriptXMLHTMLCSS在 AJAX 中使用的 Web 标准已被良好定义，并被所有的主流浏览器支持。AJAX 应用程序独立于浏览器和平台。
Web 应用程序较桌面应用程序有诸多优势；它们能够涉及广大的用户，它们更易安装及维护，也更易开发。
不过，因特网应用程序并不像传统的桌面应用程序那样完善且友好。
通过 AJAX，因特网应用程序可以变得更完善，更友好。&lt;/p&gt;

&lt;h3 id=&quot;ajax-2&quot;&gt;AJAX的几种方式&lt;/h3&gt;

&lt;p&gt;ajax的技术核心是 XMLHttpRequest 对象；
ajax 请求过程：创建 XMLHttpRequest 对象、连接服务器、发送请求、接收响应数据；&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建对象
new XMLHttpRequest();&lt;/li&gt;
  &lt;li&gt;连接和发送
    &lt;ul&gt;
      &lt;li&gt;open()函数的三个参数：请求方式、请求地址、是否异步请求(同步请求的情况极少，至今还没用到过)；&lt;/li&gt;
      &lt;li&gt;GET 请求方式是通过URL参数将数据提交到服务器的，POST则是通过将数据作为 send 的参数提交到服务器；&lt;/li&gt;
      &lt;li&gt;POST 请求中，在发送数据之前，要设置表单提交的内容类型；&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;接收
    &lt;ul&gt;
      &lt;li&gt;接收到响应后，响应的数据会自动填充XHR对象，相关属性如下
responseText：响应返回的主体内容，为字符串类型；
responseXML：如果响应的内容类型是 “text/xml” 或 “application/xml”，这个属性中将保存着相应的xml 数据，是 XML 对应的 document 类型；
status：响应的HTTP状态码；
statusText：HTTP状态的说明；&lt;/li&gt;
      &lt;li&gt;XHR对象的readyState属性表示请求/响应过程的当前活动阶段，这个属性的值如下
        &lt;ul&gt;
          &lt;li&gt;0-未初始化，尚未调用open()方法；&lt;/li&gt;
          &lt;li&gt;1-启动，调用了open()方法，未调用send()方法；&lt;/li&gt;
          &lt;li&gt;2-发送，已经调用了send()方法，未接收到响应；&lt;/li&gt;
          &lt;li&gt;3-接收，已经接收到部分响应数据；&lt;/li&gt;
          &lt;li&gt;4-完成，已经接收到全部响应数据；&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;javascript/js的ajax的GET请求代码如下所示：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#创建 XMLHttpRequest 对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GetXmlHttpObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　　　&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#code for IE7+, Firefox, Chrome, Opera, Safari&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IE6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IE5&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveXObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.XMLHTTP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;#-----------ajax方法-----------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getLabelsGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GetXmlHttpObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;您的浏览器不支持AJAX！&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　　　&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.Leefrom.com?id=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;t/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;onreadystatechange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;favorOK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;发送事件后，收到信息了调用函数&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getOkGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　　　&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ 本地提示：加载中
　　}
　　if (xmlHttp.readyState==4 &amp;amp;&amp;amp; xmlHttp.status==200){
　　　　var d= xmlHttp.responseText;
　　　　/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;处理返回结果&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;javascript/js的ajax的POST请求：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#创建 XMLHttpRequest 对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GetXmlHttpObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# code for IE7+, Firefox, Chrome, Opera, Safari&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IE6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IE5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveXObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.XMLHTTP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# -----------ajax方法-----------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getLabelsPost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GetXmlHttpObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;您的浏览器不支持AJAX！&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.lifefrom.com/t/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setRequestHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlhttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;onreadystatechange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLabelsOK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;发送事件后，收到信息了调用函数&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getOkPost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 本地提示：加载中/处理中&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;返回值&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 处理返回值&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
                <link>/js/2016/02/06/JavaScript-ajax</link>
                <guid>/js/2016/02/06/JavaScript ajax</guid>
                <pubDate>Sat, 06 Feb 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>mysql简述</title>
                <description>&lt;h3 id=&quot;phpmysql&quot;&gt;PHP的MySQL扩展(优缺点)&lt;/h3&gt;

&lt;p&gt;　设计开发允许PHP应用与MySQL数据库交互的早期扩展。mysql扩展提供了一个面向过程接口；并且是针对MySQL4.1.3或更早版本设计的。因此，这个扩展虽然可以与MySQL4.1.3或更新的数据库服务端进行交互，但并不支持后期MySQL服务端提供的一些特性。&lt;/p&gt;

&lt;h3 id=&quot;phpmysqli&quot;&gt;PHP的mysqli扩展&lt;/h3&gt;

&lt;p&gt;mysqli扩展，我们有时称之为MySQL增强扩展，可以用于使用 MySQL4.1.3或更新版本中新的高级特性；&lt;/p&gt;

&lt;p&gt;mysqli扩展在PHP 5及以后版本中包含；&lt;/p&gt;

&lt;p&gt;mysqli扩展有一系列的优势，相对于mysql扩展的提升主要有：面向对象接口、 prepared语句支持、多语句执行支持、事务支持、增强的调试能力、嵌入式服务支持。&lt;/p&gt;

&lt;h3 id=&quot;phppdo&quot;&gt;PHP数据对象(PDO)&lt;/h3&gt;

&lt;p&gt;PHP数据对象，是PHP应用中的一个数据库抽象层规范。PDO提供了一个统一的API接口可以，使得你的PHP应用不去关心具体要 连接的数据库服务器系统类型。也就是说，如果你使用PDO的API，可以在任何需要的时候无缝切换数据库服务器。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;下面是我这个星期做过的几种数据库连接的方式：&lt;/h3&gt;

&lt;p&gt;Mysql连接：&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysql_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;数据库连接错误&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;mysql_select_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bbs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;mysql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;set names &#39;utf8&#39;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;数据库连接成功&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Mysqli连接：&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysqli_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bbs&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;数据库连接错误&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mysqli_connect_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;数据库连接成功&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Pdo连接：&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$pdo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pdo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mysql:host=localhost;dbname=bbs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PDDException&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;数据库连接错误&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;数据库连接成功&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;mysqlmysqlipdo&quot;&gt;以下是我在网站看到的Mysql、Mysqli、Pdo三种方式的区别对比&lt;/h3&gt;

&lt;p&gt;PHP-MySQL 是 PHP 操作 MySQL 资料库最原始的 Extension ，PHP-MySQLi 的 i 代表 Improvement ，提高了相对进阶的功能，就 Extension 而言，本身也增加了安全性。&lt;/p&gt;

&lt;p&gt;而 PDO (PHP Data Object) 则是提供了一个 Abstraction Layer 来操作资料库&lt;/p&gt;

&lt;p&gt;1.mysql与mysqli&lt;/p&gt;

&lt;p&gt;mysqli是php5提供的新函数库，(i)表示改进，其执行速度更快.当然也更安全&lt;/p&gt;

&lt;p&gt;mysql是非持继连接函数而mysqli是永远连接函数。也就是说mysql每次链接都会打开一个连接的进程而mysqli多次运行mysqli将使用同一连接进程,从而减少了服务器的开销 有些朋友在编程的时候，使用new mysqli(‘localhost’, usenamer’, ‘password’, ‘databasename’);总是报错，Fatal error: Class ‘mysqli’ not found in d:\…
mysqli类不是php自带的吗？不是默认开启的，win下要改php.ini,去掉php_mysqli.dll前的;,linux下要把mysqli编译进去。&lt;/p&gt;

&lt;p&gt;一:Mysqli.dll是一个允许以对象的方式或者过程操作数据库的，它的使用方式也很容易。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$db_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_select_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dn_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT `name` FROM `users` WHERE `location` = &#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$location&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysql_fetch_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MYSQL_ASSOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_free_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其实背后有些学问… 这种方式不能 Bind Column ，以前例的 SQL 叙述来说，$location 的地方容易被 SQL Injection。后来于是发展出了 mysql_escape_string() (备注：5.3.0之后弃用) 以及 mysql_real_escape_string()来解决这个问题，不过这麽一搞，整个叙述会变得複杂且丑陋，而且如果栏位多了，可以想见会是怎样的情形…&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM users WHERE user=&#39;%s&#39; AND password=&#39;%s&#39;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_real_escape_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_real_escape_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在 PHP-MySQLi 中有了不少进步，除了透过 Bind Column 来解决上述问题，而且也多援 Transaction, Multi Query ，并且同时提供了 Object oriented style (下面这段 PHP-MySQLi 范例的写法) 和 Procedural style&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$mysqli&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mysqli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$db_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$db_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;INSERT INTO `users` (id, name, gender, location) VALUES (?, ?, ?, ?)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mysqli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind_param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;dsss&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source_gender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source_location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$stmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$mysqli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;但看到这边又发现了一些缺点，例如得 Bind Result，这个就有点多馀，不过这其实无关紧要，因为最大的问题还是在于这不是一个抽象(Abstraction)的方法，所以当后端更换资料库的时候，就是痛苦的开始… 于是 PDO 就出现了&lt;/p&gt;

&lt;p&gt;2.PDO与mysql&lt;/p&gt;

&lt;p&gt;PDO是PHP5.1之后才支持的，他为访问数据库采用了一致性的接口。但是国内众多的开源程序都是使用MySQL的extension所提供的function连接数据库，进行查询。PDO功能强大为何国内成熟的PHP系统都不使用呢？问过几个朋友为啥用PDO,答案是“快”，PDO连接数据库会快么？为什么使用PDO?他们两种方式有什么区别？首先还是比较关心的性能问题.写了1个脚本测试向MySQL插入100万条数据。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysql_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;die&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;mysql connect error&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dsn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql:host=127.0.0.1;dbname=performace_test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PDO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dsn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PDO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ATTR_PERSISTENT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;TRUNCATE TABLE `performace_test`.`myquery`&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//Truncate Table
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;INSERT INTO `performace_test`.`myquery`(`goods_id`,`cat_id`,`click_count`,`goods_number`,`goods_weight`,`goods_sn`,`goods_name`,`goods_reason`,`brand_name`,`goods_thumb`,`brand_id`,`is_on_sale`,`wap_cod`,`wap_title`,`wap_detail`,`wap_flag`,`wap_onsale`,`shop_price`,`cost_price`,`channel_rate`,`channel_onsale`,`add_time`,`is_main`,`last_update`,`brand_logo`) VALUES ( ’80′,’298′,’65′,’100′,’0.125′,’SMT000080′,’健康′,”,’健康120’,&#39;images/201004 /thumb_img/80_thumb_G_1272071721054.jpg’,’1′,’0′,’0′,NULL,NULL,NULL,’0′,’2980.00′,’0.00′,’1.250000′,’1′,’1271612064′,’0′,’1297624384′,’1293649512083026412.jpg’)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;USE MySQL extension: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$start_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mysql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TRUNCATE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`performace_test`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`myquery`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//Truncate Table
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/r/nUSE PDO : &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$start_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;USE MySQL extension: 95.233189106s&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;USE PDO : 99.1193888187s&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在链接MySQL上几乎没有区别。PDO的性能损失完全可以忽略不计。但是却有非常多的操作却是MySQL扩展库所不具备的：&lt;/p&gt;

&lt;p&gt;1:PDO真正的以底层实现的统一接口数库操作接口&lt;/p&gt;

&lt;p&gt;2:PDO支持更高级的DB特性操作，如：存储过程的调度等,mysql原生库是不支持的.&lt;/p&gt;

&lt;p&gt;3:PDO是PHP官方的PECL库，兼容性稳定性必然要高于MySQL Extension,可以直接使用 pecl upgrade pdo 命令升级.&lt;/p&gt;

&lt;p&gt;PHP6默认也是使用PDO进行数据库链接，MySQL Extension会作为辅助。所以我们在日常项目中，如果环境允许，尽可能去使用PDO来进行MySQL数据库操作。&lt;/p&gt;

</description>
                <link>/myslq/2016/01/23/mysql%E7%AE%80%E8%BF%B0</link>
                <guid>/myslq/2016/01/23/mysql简述</guid>
                <pubDate>Sat, 23 Jan 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Cookie+Session</title>
                <description>&lt;h2&gt;cookie机制&lt;/h2&gt;
&lt;p&gt;Cookies是服务器在本地机器上存储的小段文本并随每一个请求发送至同一个服务器。IETF RFC 2965 HTTP State Management Mechanism 是通用cookie规范。网络服务器用HTTP头向客户端发送cookies，在客户终端，浏览器解析这些cookies并将它们保存为一个本地文件，它会自动将同一服务器的任何请求缚上这些cookies 。&lt;/p&gt;

&lt;p&gt;具体来说cookie机制采用的是在客户端保持状态的方案。它是在用户端的会话状态的存贮机制，他需要用户打开客户端的cookie支持。cookie的作用就是为了解决HTTP协议无状态的缺陷所作的努力。
正统的cookie分发是通过扩展HTTP协议来实现的，服务器通过在HTTP的响应头中加上一行特殊的指示以提示浏览器按照指示生成相应的cookie。然而纯粹的客户端脚本如JavaScript也可以生成cookie。而cookie的使用是由浏览器按照一定的原则在后台自动发送给服务器的。浏览器检查所有存储的cookie，如果某个cookie所声明的作用范围大于等于将要请求的资源所在的位置，则把该cookie附在请求资源的HTTP请求头上发送给服务器。&lt;/p&gt;

&lt;p&gt;cookie的内容主要包括：名字，值，过期时间，路径和域。路径与域一起构成cookie的作用范围。若不设置过期时间，则表示这个cookie的生命期为浏览器会话期间，关闭浏览器窗口，cookie就消失。这种生命期为浏览器会话期的cookie被称为会话cookie。会话cookie一般不存储在硬盘上而是保存在内存里，当然这种行为并不是规范规定的。若设置了过期时间，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie仍然有效直到超过设定的过期时间。存储在硬盘上的cookie可以在不同的浏览器进程间共享，比如两个IE窗口。而对于保存在内存里的cookie，不同的浏览器有不同的处理方式。&lt;/p&gt;

&lt;p&gt;而session机制采用的是一种在服务器端保持状态的解决方案。同时我们也看到，由于采用服务器端保持状态的方案在客户端也需要保存一个标识，所以session机制可能需要借助于cookie机制来达到保存标识的目的。而session提供了方便管理全局变量的方式 。&lt;/p&gt;

&lt;p&gt;session是针对每一个用户的，变量的值保存在服务器上，用一个sessionID来区分是哪个用户session变量,这个值是通过用户的浏览器在访问的时候返回给服务器，当客户禁用cookie时，这个值也可能设置为由get来返回给服务器。&lt;/p&gt;

&lt;p&gt;就安全性来说：当你访问一个使用session 的站点，同时在自己机子上建立一个cookie，建议在服务器端的session机制更安全些，因为它不会任意读取客户存储的信息。&lt;/p&gt;

&lt;h2&gt;session机制&lt;/h2&gt;
&lt;p&gt;session机制是一种服务器端的机制，服务器使用一种类似于散列表的结构（也可能就是使用散列表）来保存信息。&lt;/p&gt;

&lt;p&gt;当程序需要为某个客户端的请求创建一个session时，服务器首先检查这个客户端的请求里是否已包含了一个session标识（称为session id），如果已包含则说明以前已经为此客户端创建过session，服务器就按照session id把这个session检索出来使用（检索不到，会新建一个），如果客户端请求不包含session id，则为此客户端创建一个session并且生成一个与此session相关联的session id，session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串，这个session id将被在本次响应中返回给客户端保存。&lt;/p&gt;

&lt;p&gt;保存这个session id的方式可以采用cookie，这样在交互过程中浏览器可以自动的按照规则把这个标识发挥给服务器。一般这个cookie的名字都是类似于SEEESIONID。但cookie可以被人为的禁止，则必须有其他机制以便在cookie被禁止时仍然能够把session id传递回服务器。
经常被使用的一种技术叫做URL重写，就是把session id直接附加在URL路径的后面。还有一种技术叫做表单隐藏字段。就是服务器会自动修改表单，添加一个隐藏字段，以便在表单提交时能够把session id传递回服务器。&lt;/p&gt;

&lt;p&gt;Cookie与Session都能够进行会话跟踪，但是完成的原理不太一样。普通状况下二者均能够满足需求，但有时分不能够运用Cookie，有时分不能够运用Session。下面经过比拟阐明二者的特性以及适用的场所。&lt;/p&gt;

&lt;h4&gt;1 .存取方式的不同&lt;/h4&gt;

&lt;p&gt;Cookie中只能保管ASCII字符串，假如需求存取Unicode字符或者二进制数据，需求先进行编码。Cookie中也不能直接存取Java对象。若要存储略微复杂的信息，运用Cookie是比拟艰难的。
而Session中能够存取任何类型的数据，包括而不限于String、Integer、List、Map等。Session中也能够直接保管Java Bean乃至任何Java类，对象等，运用起来十分便当。能够把Session看做是一个Java容器类。&lt;/p&gt;

&lt;h4&gt;2 .隐私策略的不同&lt;/h4&gt;

&lt;p&gt;Cookie存储在客户端阅读器中，对客户端是可见的，客户端的一些程序可能会窥探、复制以至修正Cookie中的内容。而Session存储在服务器上，对客户端是透明的，不存在敏感信息泄露的风险。
假如选用Cookie，比较好的方法是，敏感的信息如账号密码等尽量不要写到Cookie中。最好是像Google、Baidu那样将Cookie信息加密，提交到服务器后再进行解密，保证Cookie中的信息只要本人能读得懂。而假如选择Session就省事多了，反正是放在服务器上，Session里任何隐私都能够有效的保护。&lt;/p&gt;

&lt;h4&gt;3.有效期上的不同&lt;/h4&gt;

&lt;p&gt;使用过Google的人都晓得，假如登录过Google，则Google的登录信息长期有效。用户不用每次访问都重新登录，Google会持久地记载该用户的登录信息。要到达这种效果，运用Cookie会是比较好的选择。只需要设置Cookie的过期时间属性为一个很大很大的数字。&lt;/p&gt;

&lt;p&gt;由于Session依赖于名为JSESSIONID的Cookie，而Cookie JSESSIONID的过期时间默许为–1，只需关闭了阅读器该Session就会失效，因而Session不能完成信息永世有效的效果。运用URL地址重写也不能完成。而且假如设置Session的超时时间过长，服务器累计的Session就会越多，越容易招致内存溢出。&lt;/p&gt;

&lt;h4&gt;4.服务器压力的不同&lt;/h4&gt;

&lt;p&gt;Session是保管在服务器端的，每个用户都会产生一个Session。假如并发访问的用户十分多，会产生十分多的Session，耗费大量的内存。因而像Google、Baidu、Sina这样并发访问量极高的网站，是不太可能运用Session来追踪客户会话的。&lt;/p&gt;

&lt;p&gt;而Cookie保管在客户端，不占用服务器资源。假如并发阅读的用户十分多，Cookie是很好的选择。关于Google、Baidu、Sina来说，Cookie或许是唯一的选择。&lt;/p&gt;

&lt;h4&gt;5 .浏览器支持的不同&lt;/h4&gt;

&lt;p&gt;Cookie是需要客户端浏览器支持的。假如客户端禁用了Cookie，或者不支持Cookie，则会话跟踪会失效。关于WAP上的应用，常规的Cookie就派不上用场了。&lt;/p&gt;

&lt;p&gt;假如客户端浏览器不支持Cookie，需要运用Session以及URL地址重写。需要注意的是一切的用到Session程序的URL都要进行URL地址重写，否则Session会话跟踪还会失效。关于WAP应用来说，Session+URL地址重写或许是它唯一的选择。&lt;/p&gt;

&lt;p&gt;假如客户端支持Cookie，则Cookie既能够设为本浏览器窗口以及子窗口内有效（把过期时间设为–1），也能够设为一切阅读器窗口内有效（把过期时间设为某个大于0的整数）。但Session只能在本阅读器窗口以及其子窗口内有效。假如两个浏览器窗口互不相干，它们将运用两个不同的Session。（IE8下不同窗口Session相干）&lt;/p&gt;

&lt;h4&gt;6.跨域支持上的不同&lt;/h4&gt;

&lt;p&gt;Cookie支持跨域名访问，例如将domain属性设置为“.biaodianfu.com”，则以“.biaodianfu.com”为后缀的一切域名均能够访问该Cookie。跨域名Cookie如今被普遍用在网络中，例如Google、Baidu、Sina等。而Session则不会支持跨域名访问。Session仅在他所在的域名内有效。
仅运用Cookie或者仅运用Session可能完成不了理想的效果。这时应该尝试一下同时运用Cookie与Session。Cookie与Session的搭配运用在实践项目中会完成很多意想不到的效果。&lt;/p&gt;
</description>
                <link>/2016/01/15/session-cookies</link>
                <guid>/2016/01/15/session-cookies</guid>
                <pubDate>Fri, 15 Jan 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>在 Cygwin 上编译 Contiki</title>
                <description>&lt;p&gt;由于使用 Contiki 需要 Linux 环境，切换来切换去很麻烦，幸好 Windows 下面有 Unix 模拟环境软件，Cygwin。本文主要介绍 8051 核的 Contiki 编译，它的编译需要编译器 SDCC，所以本文介绍 SDCC 的编译。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;官方 8051 核的编译文档请参考 &lt;a href=&quot;https://github.com/contiki-os/contiki/wiki/8051-Requirements&quot;&gt;8051 Requirements&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：官方的 win32 版的 SDCC 并不适用。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;依赖&lt;/h2&gt;

&lt;p&gt;必须确定安装以下依赖包，可以从 Cygwin 源中直接找到：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;gcc&lt;/li&gt;
    &lt;li&gt;flex&lt;/li&gt;
    &lt;li&gt;bison&lt;/li&gt;
    &lt;li&gt;libboost-graph-dev&lt;/li&gt;
    &lt;li&gt;python&lt;/li&gt;
    &lt;li&gt;make&lt;/li&gt;
    &lt;li&gt;texinfo&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;此外，还需要安装一个工具，&lt;a href=&quot;http://srecord.sourceforge.net/&quot;&gt;srecord&lt;/a&gt;，下载 Win32 版本后，直接放于&lt;code class=&quot;highlighter-rouge&quot;&gt;cygwin/bin/&lt;/code&gt;目录下即可。&lt;/p&gt;

&lt;h2 id=&quot;sdcc&quot;&gt;编译 SDCC&lt;/h2&gt;

&lt;h3 id=&quot;sdcc-&quot;&gt;SDCC 源码下载&lt;/h3&gt;

&lt;p&gt;直接使用&lt;code class=&quot;highlighter-rouge&quot;&gt;svn&lt;/code&gt;下载即可，本文版本为&lt;strong&gt;9377&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn co svn://svn.code.sf.net/p/sdcc/code/trunk/sdcc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;sdcc--1&quot;&gt;SDCC 源码修改&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;device/lib/incl.mk&lt;/code&gt;，找到：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makefile
 MODELS = small medium large
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改成&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makefile
 MODELS = small large huge
&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;编译&lt;code class=&quot;highlighter-rouge&quot;&gt;device/lib/Makefile.in&lt;/code&gt;，找到：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makefile
 TARGETS += models small-mcs51-stack-auto
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改成：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makefile
 TARGETS += models model-mcs51-stack-auto
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;编译&lt;/h3&gt;

&lt;p&gt;进行配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure --disable-gbz80-port --disable-z80-port --disable-ds390-port --disable-ds400-port --disable-pic14-port --disable-pic16-port --disable-hc08-port --disable-r2k-port --disable-z180-port --disable-sdcdb --disable-ucsim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编译并安装：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;试用&lt;/h2&gt;

&lt;p&gt;在 Contiki 的&lt;code class=&quot;highlighter-rouge&quot;&gt;example/hello-world&lt;/code&gt;目录下运行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make &lt;span class=&quot;nv&quot;&gt;TARGET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;cc2530dk all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;便可以生成&lt;code class=&quot;highlighter-rouge&quot;&gt;hello-world.hex&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;用 SmartRF Flash 工具便可以下载。&lt;/p&gt;

&lt;h2 id=&quot;cc-tool&quot;&gt;关于编译 cc-tool&lt;/h2&gt;

&lt;p&gt;还是别折腾了，因为 cygwin 下，libusb 不支持。&lt;/p&gt;
</description>
                <link>/embedded/2015/10/26/contiki-cygwin</link>
                <guid>/embedded/2015/10/26/contiki-cygwin</guid>
                <pubDate>Mon, 26 Oct 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Jekyll Editor 使用入门</title>
                <description>&lt;p&gt;Jekyll Editor 专门为 Jekyll 博客定制的强大的 markdown 编辑器，它会自动从&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;yourname&amp;gt;.github.io&lt;/code&gt;仓库读取&lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt;目录下的博客列表，并可以读取、创建、修改博客。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;section&quot;&gt;项目&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Github&lt;/strong&gt;：https://github.com/Simpleyyt/jekyll-editor.git&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Chrome 商店&lt;/strong&gt;：https://chrome.google.com/webstore/detail/jekyll-editor/dfdkgbhjmllemfblfoohhehdigokocme&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;主要功能&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;获取博文列表，发布、更新、修改博文&lt;/li&gt;
  &lt;li&gt;博文自动保存到本地&lt;/li&gt;
  &lt;li&gt;强大的 Markdown 编辑器&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;使用说明&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://simpleyyt.qiniudn.com/15-10-11/10214115.jpg&quot; alt=&quot;Jekyll Editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;左上角为编辑器的常用工具，包含&lt;code class=&quot;highlighter-rouge&quot;&gt;emoji&lt;/code&gt;表情。右上角的工具依次为登录、全窗口预览、新博文、博文列表、元数据、提交博文，帮助、关于。&lt;/p&gt;

&lt;p&gt;首次使用时，必须先进行登录，也就是与 github 相连。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;博文列表&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://simpleyyt.qiniudn.com/15-10-11/12709365.jpg&quot; alt=&quot;博文列表&quot; /&gt;&lt;/p&gt;

&lt;p&gt;博文列表会自动获取&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;yourname.github.io&lt;/code&gt;仓库读取&lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt;目录下&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;date&amp;gt;-&amp;lt;slug&amp;gt;.md&lt;/code&gt;格式的文件，即为博文。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;元数据&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://simpleyyt.qiniudn.com/15-10-11/85340312.jpg&quot; alt=&quot;元数据&quot; /&gt;&lt;/p&gt;

&lt;p&gt;即博文的 yaml 格式数据，博文将会以文件名&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;date&amp;gt;-&amp;lt;slug&amp;gt;.md&lt;/code&gt;的格式更新。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：当“发布”打勾时，才会真正地发布。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;bug&quot;&gt;已知 Bug&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;在获取博文列表时，可能会由于多方面原因卡死&lt;/li&gt;
  &lt;li&gt;预览窗口的滚动条有时会出现问题&lt;/li&gt;
  &lt;li&gt;发布时可能会卡死&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>/daily/2015/10/11/jekyll-editor-tutorial</link>
                <guid>/daily/2015/10/11/jekyll-editor-tutorial</guid>
                <pubDate>Sun, 11 Oct 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Jekyll Editor 应用上线</title>
                <description>&lt;p&gt;Jekyll Editor 的 Chrome App 版本终于发布，具体地址为：&lt;a href=&quot;https://chrome.google.com/webstore/detail/jekyll-editor/dfdkgbhjmllemfblfoohhehdigokocme?hl=zh-CN&quot;&gt;Jekyll Editor&lt;/a&gt;。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;为了发布这个应用我真是费了好多心思，因为本人并没有 VISA 卡，也没有信用卡。我想到了一个神奇的网站，不是58，而是淘宝，搜了好久之后，发现有一种叫 VISA 虚拟卡，但是好像不能用，可能会被禁:flushed:。&lt;/p&gt;

&lt;p&gt;当然，还有一种是在线帮忙开，费用非常贵，要200多块，我还是咬咬牙就拍了:sob:。说多了都是泪，哎。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chrome App 地址为：https://chrome.google.com/webstore/detail/jekyll-editor/dfdkgbhjmllemfblfoohhehdigokocme?hl=zh-CN&lt;/strong&gt;&lt;/p&gt;
</description>
                <link>/daily/2015/10/11/jekyll-editor-online</link>
                <guid>/daily/2015/10/11/jekyll-editor-online</guid>
                <pubDate>Sun, 11 Oct 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>写 Jekyll 博客工具</title>
                <description>&lt;p&gt;上次说要写一个类似 stackeditor 的东西来写 Jekyll 博客，终于写好了。这将是第一篇用该工具写的博客。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;详细的说明将会在发布之后再说:smiley:，它是 Chrome App，基于 Editor.md 的一个应用，挺不错的，该有的都有，就是有时候有会 Bug，:disappointed_relieved:。但是没事，我以后会慢慢改进。&lt;/p&gt;

&lt;p&gt;我已经把代码 push 到 github 上去了，项目地址：&lt;a href=&quot;https://github.com/Simpleyyt/jekyll-editor.git&quot;&gt;https://github.com/Simpleyyt/jekyll-editor.git&lt;/a&gt;，写得有点乱，以后再慢慢重构。还有一个重要的问题，我没有 chrome 开发者账号:frowning:，好惨。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://simpleyyt.qiniudn.com/15-10-9/34912413.jpg&quot; alt=&quot;Jekyll Editor 截图&quot; /&gt;&lt;/p&gt;
</description>
                <link>/daily/2015/10/09/tool-for-jekyll-blog</link>
                <guid>/daily/2015/10/09/tool-for-jekyll-blog</guid>
                <pubDate>Fri, 09 Oct 2015 00:00:00 +0800</pubDate>
        </item>


</channel>
</rss>
